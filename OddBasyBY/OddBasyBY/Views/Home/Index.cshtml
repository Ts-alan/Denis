@{
    ViewBag.Title = "Home Page";
}
<script type="text/javascript">
    ymaps.ready(init);
    var myMap;
    var myPlacemark;
    var Arr = [[]];
    var counterArr = 0;
    var handlerRoute;
    var currentRoute;
    var firstPointRoute;
    var endPointRoute;
    var position;
    var identifierForDelete = 0;

    function init() {

        myMap = new ymaps.Map("map", {
            center: [53.9172, 27.5601],
            zoom: 11,
            controls: []
        });

        myMap.behaviors.disable(["dblClickZoom"]);

        handlerRoute = function (e) {


            var coords = e.get('coords');
            if (counterArr < 2) {
                Arr[counterArr] = [coords[0].toPrecision(6), coords[1].toPrecision(6)];

            }
            if (counterArr == 0) {
                firstPointRoute = new ymaps.GeoObject({
                    geometry: {
                        type: "Point",// тип геометрии - точка
                        coordinates: [coords[0].toPrecision(6), coords[1].toPrecision(6)] // координаты точки
                    },
                    properties: {
                        iconContent: "Начало улицы",
                        balloonContentHeader: "<a href='#' onclick='setHandlerS()'>Удалить Обьект</a>",
                        balloonContent: "[" + coords[0].toPrecision(6) + "," + coords[1].toPrecision(6) + "]"
                    }
                },
                     { draggable: true, preset: "islands#darkGreenStretchyIcon" });
                firstPointRoute.events.add("dragend", function (e) {

                    var coords = firstPointRoute.geometry.getCoordinates();
                    Arr[0] = [coords[0].toPrecision(6), coords[1].toPrecision(6)];
                    //изменение координат при пертягивание метки
                    var object = e.get('target');
                    object.properties.set("balloonContent", "[" + coords[0].toPrecision(6) + "," + coords[1].toPrecision(6) + "]");

                });

                myMap.geoObjects.add(firstPointRoute);
                identifierForDelete++;
            }
            counterArr++;
            console.log(Arr.length);
            if (Arr.length == 2) {

                SetRoute(Arr);
                //задать несколько маршрутов
                //Arr = [];
                //counterArr = 0;
                myMap.events.remove('dblclick', handlerRoute);
            }
        }

        myMap.events.add('dblclick', handlerRoute);

    }

    function SetRoute(Arr) {
        ymaps.route([
                  Arr[0],
                  Arr[1]
        ],
                      {
                          mapStateAutoApply: true, removeViaPoints: true
                      }
                  ).then(
                  function (route) {
                      route.events.add('dragend', function (e) {
                          var coords = e.get('domEvent');
                          console.log(coords.get('target'));
                      });
                      currentRoute = route;

                      route.editor.start({
                          editWayPoints: true
                      });

                      var points = route.getWayPoints();
                      points.get(0).properties.set("iconContent", "Начало улицы");
                      points.get(0).properties.set("balloonContentHeader", "<a href='#' onclick='setHandlerS()'>Удалить Обьект</a>");
                      points.get(0).options.set('preset', 'islands#darkGreenStretchyIcon');


                      points.get(1).properties.set("iconContent", "Конец улицы");
                      points.get(1).properties.set("balloonContentHeader", "<a href='#' onclick='setHandlerE()'>Удалить Обьект</a>");
                      points.get(1).options.set("preset", "islands#darkGreenStretchyIcon");
                      route.editor.events.add("routeupdate", function () {
                          $("#breadthS").val(route.requestPoints[0][0].toString().substr(0, 7));
                          $("#lengthS").val(route.requestPoints[0][1].toString().substr(0, 7));
                          $("#breadthE").val(route.requestPoints[1][0].toString().substr(0, 7));
                          $("#lengthE").val(route.requestPoints[1][1].toString().substr(0, 7));
                      });

                      route.getPaths().options.set({

                          //можно выставить настройки графики маршруту
                          strokeColor: '0000ffff',
                          opacity: 0.9
                      });
                      myMap.geoObjects.add(route);
                      //удаление лишних обьектов
                      myMap.geoObjects.remove(myPlacemark);
                      myMap.geoObjects.remove(firstPointRoute);
                      myMap.geoObjects.remove(endPointRoute);
                      
                      identifierForDelete = 0;
                      //заполнение переменных
                      $("#breadthS").val(Arr[0][0]);
                      $("#lengthS").val(Arr[0][1]);
                      $("#breadthE").val(Arr[1][0]);
                      $("#lengthE").val(Arr[1][1]);
                  },
                  function (error) {
                      alert("Возникла ошибка: " + error.message);
                  });


    }

    function search() {

        if (myPlacemark != undefined) {

            myMap.geoObjects.remove(myPlacemark);
        }
        position = $("#city").val().toString() + " " + $("#street").val().toString();

        var myGeocoder = ymaps.geocode(position);

        myGeocoder.then(
            function (res) {

                myPlacemark = new ymaps.GeoObject({
                    geometry: {
                        type: "Point",// тип геометрии - точка
                        coordinates: [res.geoObjects.get(0).geometry.getCoordinates()[0], res.geoObjects.get(0).geometry.getCoordinates()[1]] // координаты точки
                    }
                },

                 { draggable: true });
                myMap.geoObjects.add(myPlacemark);
                identifierForDelete++;
                myMap.setCenter([res.geoObjects.get(0).geometry.getCoordinates()[0], res.geoObjects.get(0).geometry.getCoordinates()[1]], 14);
            });

    }

    function Set() {
        if ($("#breadthS").val() != "" && $("#lengthS").val() != "" && $("#breadthE").val() && $("#lengthE").val()) {
            var Arr = [[]];
            Arr[0] = [parseInt($("#breadthS").val()), parseInt($("#lengthS").val())];
            Arr[1] = [parseInt($("#breadthE").val()), parseInt($("#lengthE").val())];
            SetRoute(Arr);
        }
    }

    function setHandlerS() {
        if (identifierForDelete == 0) {
            myMap.geoObjects.remove(currentRoute);

            endPointRoute = new ymaps.GeoObject({
                geometry: {
                    type: "Point",// тип геометрии - точка
                    coordinates: [Arr[1][0], Arr[1][1]] // координаты точки
                },
                properties: {
                    iconContent: "Конец улицы",
                    balloonContentHeader: "<a href='#' onclick='setHandlerE()'>Удалить Обьект</a>",
                    balloonContent: "[" + Arr[1][0] + "," + Arr[1][1] + "]"
                }
            },
                        { draggable: true, preset: "islands#darkGreenStretchyIcon" });


            endPointRoute.events.add("dragend", function (e) {

                var coords = endPointRoute.geometry.getCoordinates();
                Arr[1] = [coords[0].toPrecision(6), coords[1].toPrecision(6)];
                //изменение координат при пертягивание метки
                var object = e.get('target');
                object.properties.set("balloonContent", "[" + coords[0].toPrecision(6) + "," + coords[1].toPrecision(6) + "]");

            });
            myMap.geoObjects.add(endPointRoute);
            myMap.events.add('dblclick', handlerRoute);

        } else {
            myMap.geoObjects.remove(firstPointRoute);
            identifierForDelete = 0;
            counterArr = 0;
            Arr = [[]];

        }
        counterArr = 0;
    }

    function setHandlerE() {
        myMap.geoObjects.remove(endPointRoute);
        myMap.geoObjects.remove(currentRoute);
        myMap.geoObjects.add(firstPointRoute);
        myMap.events.add('dblclick', handlerRoute);
        counterArr = 1;
        identifierForDelete = 1;

    }
    //задание координат
    $(document).ready(function () {


        $("#breadthS").change(function () {
            Set();
        });

        $("#lengthS").change(function () {
            Set();
        });

        $("#breadthE").change(function () {
            Set();
        });

        $("#lengthE").change(function () {
            Set();
        });
        //появление координат
        $(".btn-success").click(function () {
            $("[style='visibility: hidden']").css("visibility", "visible");

        });
        //сохранить координаты и заблокировать поля
        $(".btn-danger").click(function () {

            $("#readonly input").each(function (indx, element) {
                $(element).attr("readonly", "");
            });
            $(this).css("visibility", "hidden");
            $(".btn-success").replaceWith("<b>" + position + "</b>");
            //блокировка карты
            myMap.events.remove('dblclick', handlerRoute);
            currentRoute.editor.start({ editWayPoints: false });

        });


    });
</script>
<div>
    @Html.Label("Выбирите город", new { @for = "city" }) @Html.TextBox(" ", null, new { id = "city" })
    @Html.Label("Выбирите улицу", new { @for = "street" }) @Html.TextBox(" ", null, new { id = "street" })
    <input type="button" value="Поиск" onclick="search()" />
</div>
<div id="map" style="width: 60%; height: 600px;float: left"></div>
<div id="readonly" style="margin-left: 62%; width: 100%;">
    <button class="btn btn-success"> Задать координаты</button>
    <div style="visibility: hidden">
        <div>Начальная точка</div>
        <div>
            @Html.Label("Широта", new { @for = "city" }) @Html.TextBox(" ", null, new { id = "breadthS" })
            @Html.Label("Долгота", new { @for = "city" }) @Html.TextBox(" ", null, new { id = "lengthS" })
        </div>
        <div>
            Конечная точка
        </div>
        <div>
            @Html.Label("Широта", new { @for = "city" }) @Html.TextBox(" ", null, new { id = "breadthE" })
            @Html.Label("Долгота", new { @for = "city" }) @Html.TextBox(" ", null, new { id = "lengthE" })
        </div>
        <button class="btn btn-danger">Сохранить координаты</button>
    </div>
</div>