@{
    ViewBag.Title = "Home Page";
}
<script type="text/javascript">
    ymaps.ready(init);
    var myMap;
    var myPlacemark;
    var Arr = [[]];
    var counterArr = 0;
    var handlerRoute;
    var currentRoute;
    var firstPointRoute;
    var endPointRoute;
    var position;
    var identifierForDelete = 0;

    function init() {

        myMap = new ymaps.Map("map", {
            center: [53.9172, 27.5601],
            zoom: 11,
            controls: []
        });

        myMap.behaviors.disable(["dblClickZoom"]);



    }

    function SetRoute(Arr) {
     
        if (currentRoute != undefined) {
            myMap.geoObjects.remove(currentRoute);
        }
        ymaps.route([
                Arr[0],
                Arr[1]
        ],
            {
                mapStateAutoApply: true,
                removeViaPoints: true
            }
        ).then(
            function (route) {
                route.events.add('dragend', function (e) {

                    Arr[0] = [route.requestPoints[0][0].toString().substr(0, 7), route.requestPoints[0][1].toString().substr(0, 7)];
                    Arr[1] = [route.requestPoints[1][0].toString().substr(0, 7), route.requestPoints[1][1].toString().substr(0, 7)];
                });


                route.editor.start({
                    editWayPoints: true
                });

                var points = route.getWayPoints();
                points.get(0).properties.set("iconContent", "Начало улицы");
                points.get(0).properties.set("balloonContentHeader", "<a href='#' onclick='setHandlerS()'>Удалить Обьект</a>");
                points.get(0).options.set('preset', 'islands#darkGreenStretchyIcon');


                points.get(1).properties.set("iconContent", "Конец улицы");
                points.get(1).properties.set("balloonContentHeader", "<a href='#' onclick='setHandlerE()'>Удалить Обьект</a>");
                points.get(1).options.set("preset", "islands#darkGreenStretchyIcon");
                route.editor.events.add("routeupdate", function () {
                    $("#breadthS").val(route.requestPoints[0][0].toString().substr(0, 7));
                    $("#lengthS").val(route.requestPoints[0][1].toString().substr(0, 7));
                    $("#breadthE").val(route.requestPoints[1][0].toString().substr(0, 7));
                    $("#lengthE").val(route.requestPoints[1][1].toString().substr(0, 7));
                });

                route.getPaths().options.set({

                    //можно выставить настройки графики маршруту
                    strokeColor: '0000ffff',
                    opacity: 0.9
                });
                currentRoute = route;
                myMap.geoObjects.add(route);
                //удаление лишних обьектов
                myMap.geoObjects.remove(myPlacemark);
                myMap.geoObjects.remove(firstPointRoute);
                myMap.geoObjects.remove(endPointRoute);

                identifierForDelete = 0;
                //заполнение переменных
                $("#breadthS").val(Arr[0][0]);
                $("#lengthS").val(Arr[0][1]);
                $("#breadthE").val(Arr[1][0]);
                $("#lengthE").val(Arr[1][1]);
            },
            function (error) {
                alert("Возникла ошибка: " + error.message);
            });


    }

    //поиск
    function search() {

        if (myPlacemark != undefined) {

            myMap.geoObjects.remove(myPlacemark);
        }
        position = $("#city").val().toString() + " " + $("#street").val().toString();

        var myGeocoder = ymaps.geocode(position);

        myGeocoder.then(
            function (res) {

                myPlacemark = new ymaps.GeoObject({
                    geometry: {
                        type: "Point", // тип геометрии - точка
                        coordinates: [res.geoObjects.get(0).geometry.getCoordinates()[0], res.geoObjects.get(0).geometry.getCoordinates()[1]] // координаты точки
                    }
                },
                { draggable: true });
                myMap.geoObjects.add(myPlacemark);
                identifierForDelete++;
                myMap.setCenter([res.geoObjects.get(0).geometry.getCoordinates()[0], res.geoObjects.get(0).geometry.getCoordinates()[1]], 14);
            });

    }

    function Set() {
        if ($("#breadthS").val() != "" && $("#lengthS").val() != "" && $("#breadthE").val() && $("#lengthE").val()) {
            Arr = [[]];

            Arr[0] = [parseFloat($("#breadthS").val()), parseFloat($("#lengthS").val())];
            Arr[1] = [parseFloat($("#breadthE").val()), parseFloat($("#lengthE").val())];

            SetRoute(Arr);
        }
    }

    function setHandlerS() {
        if (identifierForDelete == 0) {
            myMap.geoObjects.remove(currentRoute);

            endPointRoute = new ymaps.GeoObject({
                geometry: {
                    type: "Point", // тип геометрии - точка
                    coordinates: [Arr[1][0], Arr[1][1]] // координаты точки
                },
                properties: {
                    iconContent: "Конец улицы",
                    balloonContentHeader: "<a href='#' onclick='setHandlerE()'>Удалить Обьект</a>",
                    balloonContent: "[" + Arr[1][0] + "," + Arr[1][1] + "]"
                }
            },
            { draggable: true, preset: "islands#darkGreenStretchyIcon" });


            endPointRoute.events.add("dragend", function (e) {

                var coords = endPointRoute.geometry.getCoordinates();
                Arr[1] = [coords[0].toPrecision(6), coords[1].toPrecision(6)];
                //изменение координат при пертягивание метки
                var object = e.get('target');
                object.properties.set("balloonContent", "[" + coords[0].toPrecision(6) + "," + coords[1].toPrecision(6) + "]");

            });
            myMap.geoObjects.add(endPointRoute);
            myMap.events.add('dblclick', handlerRoute);
            identifierForDelete = 1;

        } else {
            myMap.geoObjects.remove(firstPointRoute);
            identifierForDelete = 0;
            counterArr = 0;
            Arr = [[]];


        }
        counterArr = 0;
    }

    function setHandlerE() {

        if (identifierForDelete == 0) {
            myMap.geoObjects.remove(endPointRoute);
            myMap.geoObjects.remove(currentRoute);
            firstPointRoute.geometry.setCoordinates([Arr[0][0], Arr[0][1]]);
            myMap.geoObjects.add(firstPointRoute);
            myMap.events.add('dblclick', handlerRoute);
            counterArr = 1;
            identifierForDelete = 1;

        } else {
            myMap.geoObjects.remove(endPointRoute);
            identifierForDelete = 0;
            counterArr = 0;
            Arr = [[]];


        }

    }
    //задать координаты
    function SetCoords() {
        if (currentRoute != undefined) {
            $("#blockStreetCoord").css("display", "inline");
            myMap.geoObjects.add(currentRoute);
            currentRoute.editor.start({ editWayPoints: true });
           
            $("#blockStreetCoord").parent().prev().children("input").each(function (indx, element) {
                $(element).removeAttr("readonly");
              
            });

            $("#blockStreetCoord").parent().prev().prev().prev().children("input").each(function (indx, element) {
                $(element).removeAttr("readonly");
            });
        }
        else {
            handlerRoute = function (e) {


                var coords = e.get('coords');
                if (counterArr < 2) {
                    Arr[counterArr] = [coords[0].toPrecision(6), coords[1].toPrecision(6)];

                }
                if (counterArr == 0) {
                    firstPointRoute = new ymaps.GeoObject({
                        geometry: {
                            type: "Point", // тип геометрии - точка
                            coordinates: [Arr[0][0], Arr[0][1]] // координаты точки
                        },
                        properties: {
                            iconContent: "Начало улицы",
                            balloonContentHeader: "<a href='#' onclick='setHandlerS()'>Удалить Обьект</a>",
                            balloonContent: "[" + coords[0].toPrecision(6) + "," + coords[1].toPrecision(6) + "]"
                        }
                    },
                    { draggable: true, preset: "islands#darkGreenStretchyIcon" });
                    firstPointRoute.events.add("dragend", function (e) {

                        var coords = firstPointRoute.geometry.getCoordinates();
                        Arr[0] = [coords[0].toPrecision(6), coords[1].toPrecision(6)];
                        //изменение координат при пертягивание метки
                        var object = e.get('target');
                        object.properties.set("balloonContent", "[" + coords[0].toPrecision(6) + "," + coords[1].toPrecision(6) + "]");

                    });

                    myMap.geoObjects.add(firstPointRoute);
                    identifierForDelete++;
                }
                counterArr++;

                if (Arr.length == 2) {

                    SetRoute(Arr);
                    //задать несколько маршрутов
                    //Arr = [];
                    //counterArr = 0;
                    myMap.events.remove('dblclick', handlerRoute);
                }
            }

            myMap.events.add('dblclick', handlerRoute);
        }

        $("#breadthS").change(function () {
            Set();
        });

        $("#lengthS").change(function () {
            Set();
        });

        $("#breadthE").change(function () {
            Set();
        });

        $("#lengthE").change(function () {
            Set();
        });
    }
    //задание координат
    $(document).ready(function () {

        //заблокировать наименовае улицы
        $("#blockStreet").click(function () {
            $(this).parent().prev().children("input").each(function (indx, element) {
                $(element).attr("readonly", "");
            });
            $(this).css("display", "none");

        });
        //заблокировать поля  улицы и убрать координаты
        $("#blockStreetCoord").click(function () {
            //делает readOnly  инпуты
            $(this).parent().prev().children("input").each(function (indx, element) {
                $(element).attr("readonly", "");
            });
  
            $(this).parent().prev().prev().prev().children("input").each(function (indx, element) {
                $(element).attr("readonly", "");
            });

            $(this).css("display", "none");
            currentRoute.editor.start({ editWayPoints: false });
            if (currentRoute != undefined) {
                myMap.geoObjects.remove(currentRoute);
            }
            currentRoute.getPaths().options.set({

                //можно выставить настройки графики маршруту
                strokeColor: '0000ffff',
                opacity: 0.9,
                strokeWidth: 4
            });
            myMap.geoObjects.add(currentRoute.getPaths());

        });

    });
</script>

<style>
    /*правит шрифт бутсрапа*/
    label {
        font-weight: normal;
    }
    /*отступы*/
    .indentForTextBox {
        margin-right: 60px;
    }

    .btn {
        width: 285px;
    }
</style>
<h2 style="text-align: center">Карточка улицы</h2>
@using (Html.BeginForm("SaveSuccess", "Home"))
{
    <div class="form-inline">
        <div class="form-group col-lg-7 col-md-7 col-sm-7 col-xs-7">
            <div id="map" style="height: 380px;"></div>
        </div>

        <div class="form-group col-lg-5 col-md-5 col-sm-5 col-xs-5">
            <b><u>1.Наименование улицы</u></b>
            <div>
                @Html.Label("Выбирите город", new { @for = "city" }) @Html.TextBox(" ", (string)ViewBag.City, new { id = "city" })
                @Html.Label("Выбирите улицу", new { @for = "street" }) @Html.TextBox(" ", null, new { id = "street" })
            </div>
            <div>
                <button type="button" class="btn btn-success " onclick="search()">Показать на карте</button>
                <button type="button" id="blockStreet" class="btn btn-warning">Сохранить</button>
            </div>
            <b><u>2.Координаты улицы</u></b>
            <div>Начальнаты начала</div>
            <div>
                @Html.Label("Широта", new { @for = "city" }) @Html.TextBox(" ", null, new { id = "breadthS" })
                @Html.Label("Долгота", new { @for = "city" }) @Html.TextBox(" ", null, new { id = "lengthS" })
            </div>
            <div>Координаты конца</div>
            <div>
                @Html.Label("Широта", new { @for = "city" }) @Html.TextBox(" ", null, new { id = "breadthE" })
                @Html.Label("Долгота", new { @for = "city" }) @Html.TextBox(" ", null, new { id = "lengthE" })
            </div>
            <div>
                <button type="button" onclick="SetCoords()" class="btn btn-success ">Задать/Изменить координаты</button>
                <button type="button" id="blockStreetCoord" class="btn btn-warning">Сохранить</button>
            </div>
            <b><u>3.Количество и координаты участков улицы</u></b>
            <div>
                @Html.Label("Выбирите город", new { @for = "CountSides", style = "margin-right: 20px" }) @Html.TextBox(" ", null, new { id = "CountSides", style = "width: 40px" })

            </div>
            <u>Координаты участка 1</u>
            <div>Начальнаты начала</div>
            <div>
                @Html.Label("Широта", new { @for = "city" }) @Html.TextBox(" ", null, new { id = "breadth" })
                @Html.Label("Долгота", new { @for = "city" }) @Html.TextBox(" ", null, new { id = "length" })
            </div>
            <div>Координаты конца</div>
            <div>
                @Html.Label("Широта", new { @for = "city" }) @Html.TextBox(" ", null, new { id = "breadth" })
                @Html.Label("Долгота", new { @for = "city" }) @Html.TextBox(" ", null, new { id = "length" })
            </div>
        </div>

    </div>

}
<div class="">
    <b><u>4.Ввод данных</u></b>
</div>
<div>
    <button class="btn btn-default">Ввести спецификацию разметки</button>
</div>
<div>
    <b><u>Участок 1</u></b>
</div>

<div class="form-group col-lg-4 col-md-4 col-sm-4 col-xs-4" style="float: left">
    <button type="button" class="btn btn-default">Загрузить Дислокацию ТСОДД</button>
</div>
<div class="form-group col-lg-4 col-md-4 col-sm-4 col-xs-4" style="float: left">
    <button type="button" class="btn btn-default">Ввести данные о дорожных знаках</button>
</div>
<div class="form-group col-lg-4 col-md-4 col-sm-4 col-xs-4">
    <button type="button" class="btn btn-default">
        Ввести данные о дорожных ограждениях
    </button>
</div>
