@using System.Web.Razor.Generator
@using Microsoft.AspNet.Identity
@using Microsoft.AspNet.Identity.EntityFramework
@using Newtonsoft.Json
@using Sciencecom.Models
@model  Sciencecom.Models.Billboards1
@{
    ViewBag.Title = "CreateBilboard";
    SelectList owners = new SelectList(new SciencecomEntities().Owners.Select(m=>m.Name).ToList());

}
<script type="text/javascript">
    $(document).ready(function() {
        //выпадающий список
        $("#SideIndex").change(function() {
            var selectIndex = document.getElementById("SideIndex").selectedIndex;
            if (selectIndex == 0) {
                $("#SizeB").css("display", "none");
                $("#SizeC").css("display", "none");
            }
            if (selectIndex == 1) {
                $("#SizeB").css("display", "block");
                $("#SizeC").css("display", "none");
            }
            if (selectIndex == 2) {
                $("#SizeB").css("display", "block");
                $("#SizeC").css("display", "block");
            }
        });
        function InsertOn() {
            $(".each1 input").eq(0).on('change', function (e) {
                var temp1= $(this).val();
                $(".each1 input").each(function(indx) {
                    $(this).val(temp1);
                });
            });
            $(".each2 input").eq(0).on('change', function (e) {
                var temp1 = $(this).val();
                $(".each2 input").each(function (indx) {
                    $(this).val(temp1);
                });
            });
            $(".each3 input").eq(0).on('change', function (e) {
                var temp1 = $(this).val();
                $(".each3 input").each(function (indx) {
                    $(this).val(temp1);
                });
            });
            $(".each4 input").eq(0).on('change', function (e) {
                var temp1 = $(this).attr();
                $(".each4 input").each(function (indx) {
                    $(this).val(temp1);
                });
            });
            $(".each5 input").eq(0).on('change', function (e) {
                var temp1 = $(this).val();
                $(".each5 input").each(function (indx) {
                    $(this).val(temp1);
                });
            });
            $(".each6 input").eq(0).on('change', function (e) {
                var temp1 = $(this).val();
                $(".each6 input").each(function (indx) {
                    $(this).val(temp1);
                });
            });
            $(".each7 input").eq(0).on('change', function (e) {
                var temp1 = $(this).val();
                $(".each7 input").each(function (indx) {
                    $(this).val(temp1);
                });
            });

        }
        //скрипт для добавить площадь
        $("#AddButton1").click(function () {
            $.get('@Url.Action("PartialBilboard","Data")').success(function(e) {
                $("#InsertPartial1").before(e);
                InsertOn();
                @*'@TempData["select"]' = 1;*@
            });

        });
        $("#AddButton2").click(function () {
            $.get('@Url.Action("PartialBilboard","Data")').success(function (e) {
                $("#InsertPartial2").before(e);
                @*@TempData["select"] = 2;*@
            });
        });
        $("#AddButton3").click(function () {
            $.get('@Url.Action("PartialBilboard","Data")').success(function (e) {
                $("#InsertPartial3").before(e);
                @*@TempData["select"] = 3;*@
            });
        });
        //дублирование для остальных поверхностей


    });

</script>
<h2> Добавить новый билбодер</h2>

@*<link rel="stylesheet" href="http://code.jquery.com/ui/1.11.0/themes/smoothness/jquery-ui.css">*@
@Scripts.Render("~/Content/Map")
@using (Html.BeginForm("Bilboard", "Data", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <input type="text" name="Surface[0].Height" value="werra">
    <input type="text" name="Surface[1].Height" value="werra">
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true)
        @Html.ValidationMessage("Error")
        @*владелец*@
        <div class="form-group">
            @Html.Label("Владелец:", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Owner", owners)

            </div>
        </div>
        @*Населенный Пункт*@
        <div class="form-group">
            @Html.Label("Населенный Пункт:", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Locality)
                @Html.ValidationMessageFor(model => model.Street1)
            </div>
        </div>
        @*улица 1*@
        <div class="form-group">
            @Html.Label("Улица 1", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Street1)
                @Html.ValidationMessageFor(model => model.Street1)
            </div>
        </div>
        @*дом*@
        <div class="form-group">
            @Html.Label("Дом", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.House1)
                @Html.ValidationMessageFor(model => model.House1)
            </div>
        </div>
        @*улица 2*@
        <div class="form-group">
            @Html.Label("Улица 2", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Street2)
                @Html.ValidationMessageFor(model => model.Street2)
            </div>
        </div>
        @*со стороны улицы 3 *@
        <div class="form-group">
            @Html.Label("Cо стороны улицы 3 ", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FromStreet)
                @Html.ValidationMessageFor(model => model.FromStreet)
            </div>
        </div>
        @*комментарий*@
        <div class="form-group">
            @Html.Label("комментарий", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Comment)
                @Html.ValidationMessageFor(model => model.Comment)
            </div>
        </div>
        @*номер договора *@
        <div class="form-group">
            @Html.Label("номер договора ", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ContractNumber)
                @Html.ValidationMessageFor(model => model.ContractNumber)
            </div>
        </div>
        @*номер паспорта  *@
        <div class="form-group">
            @Html.Label("номер паспорта ", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PassportNumber)
                @Html.ValidationMessageFor(model => model.PassportNumber)
            </div>
        </div>

        @*вид рекламы   *@
        <div class="form-group">
            @Html.Label("Вид рекламы ", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TypeOfAdvertising", new SelectList(new[] { "Социальная", "Беларуская ", "Иная" }))@*над будет точно разобраться*@
                @Html.ValidationMessageFor(model => model.PassportNumber)
            </div>
        </div>
        @*На согласование *@
        <div class="form-group">
            @Html.Label("На согласование", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.OnAgreement, new SelectList(new[] { "Да ", "Нет" }))
                @Html.ValidationMessageFor(model => model.PassportNumber)
            </div>
        </div>

        @*разрешен с-до*@
        <div class="form-group">
            @Html.Label("Разрешен с ", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="date"  name="StartDate" >
                @*@Html.Editor("StartDate")*@
                @Html.ValidationMessageFor(model => model.StartDate)
            </div>
        </div>
        <div class="form-group">
            @Html.Label("до", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="date" name="EndDate">
                @*@Html.EditorFor(model => model.EndDate)*@
                @Html.ValidationMessageFor(model => model.EndDate)
            </div>
        </div>
        @*Количество сторон*@
        <div class="form-group">
            @Html.Label("Количество сторон", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TypeOfAdvertising", new SelectList(new[] { "1", "2", "3" }), new
           {
               id = "SideIndex", @*onchange = "ShowHideDate()"*@})
                @Html.ValidationMessageFor(model => model.PassportNumber)
            </div>
        </div>

        @*Сторона А*@
        <div class="form-group">
            <div class="form-group">
                @Html.Label("Сторона А", new {@class = "control-label col-md-2", style = "margin-left: 55px"})
                @Html.HiddenFor(model => model.Sides.Single().Name)
            </div>
            @*@{Html.RenderPartial("~/Views/Shared/PartialView/AddSurface.cshtml", Model);}*@
            @*Добавить площадь*@
            <div class="form-group">
                <div class="col-md-10">
                    <a href="#" id="AddButton1" style="color: #428bca; font-weight: bold;">+Добавить площадь</a>
                </div>
            </div>
            <div id="InsertPartial1"></div>
        </div>
        
        @*Сторона Б*@
        <div class="form-group" id="SizeB" style="display: none">
            <div class="form-group">
                @Html.HiddenFor(model => model.Sides.Single().Name)
                @Html.Label("Сторона Б", new {@class = "control-label col-md-2", style = "margin-left:45px"})
            </div>
            @*@{Html.RenderPartial("~/Views/Shared/PartialView/AddSurface.cshtml", Model);}*@
            @*Добавить площадь*@
            <div class="form-group">
                <div class="col-md-10">
                    <a href="#" id="AddButton2" style="color: #428bca; font-weight: bold;">+Добавить площадь</a>
                </div>
            </div>
            <div id="InsertPartial2"></div>
        </div>

        @*Сторона C*@
        <div class="form-group" id="SizeC" style="display: none">
            <div class="form-group">
                @Html.HiddenFor(model => model.Sides.Single().Name)
                @Html.Label("Сторона C", new {@class = "control-label col-md-2", style = "margin-left:45px"})
            </div>
            @*@{Html.RenderPartial("~/Views/Shared/PartialView/AddSurface.cshtml", Model);}*@
            @*Добавить площадь*@
            <div class="form-group">
                <div class="col-md-10">
                    <a href="#" id="AddButton3" style="color: #428bca; font-weight: bold;">+Добавить площадь</a>
                </div>
            </div>
           <div id="InsertPartial3"></div>
        </div>

        <div class="form-group" style="width: 600px; height: 500px" id="map">
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="Shirota">Широта</label>
            <div class="col-md-10">
                <input type="text" id="Shirota" name="Height" readonly required/>
                @Html.ValidationMessageFor(model => model.Height)
                @*<span class="field-validation-valid" data-valmsg-for="Shirota" data-valmsg-replace="true"></span>*@
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="Dolgota">Долгота</label>
            <div class="col-md-10">
                <input type="text" id="Dolgota" name="Breadth" readonly required />
                @Html.ValidationMessageFor(model => model.Breadth)
                @*<span class="field-validation-valid" data-valmsg-for="Dolgota" data-valmsg-replace="true"></span>*@
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Добавить" class="btn btn-default" />
            </div>
        </div>
    </div>




}
