@model Sciencecom.Models.MetalConstruction
@using Microsoft.AspNet.Identity.EntityFramework
@using Microsoft.AspNet.Identity
@using Sciencecom.Models

@{
    ViewBag.Title = "Редактировать металлический указатель";
    Layout = "~/Views/Shared/_Layout.cshtml";
    SelectList owners = new SelectList(new SciencecomEntities().Owners.Select(m => m.Name).ToList());
}
<link rel="stylesheet" href="http://code.jquery.com/ui/1.11.0/themes/smoothness/jquery-ui.css">
<script src="http://code.jquery.com/jquery-1.10.2.js"></script>
<script src="http://code.jquery.com/ui/1.11.0/jquery-ui.js"></script>
<script src="~/Scripts/Autocomplete.js"></script>
<script src="~/Scripts/EditPlacemark.js"></script>
<script>
    $(function () {
        EditPlacemark("@Model.Shirota", "@Model.Dolgota");
    });
</script>
<h2>Редактировать металлический указатель</h2>

@{
    var um = new UserManager<ApplicationUser>(new UserStore<ApplicationUser>(new ApplicationDbContext()));
    ApplicationUser user = um.FindByName(User.Identity.GetUserName());
    string role = user.Roles.Select(m => m.Role.Name).First().ToString();
    if (((role == "Admin") || (role == "ChiefEditAll") || (role == "SupplierEditAll")) ||
          (((role == "ChiefEditOwn") || (role == "SupplierEditOwn")) && ((user.Company == Model.OwnerWhoAdded.Name)
          || (Model.OwnerWhoAdded.Name == "Неизвестно"))))
    {
        using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <hr />
                @Html.ValidationSummary(true)
                @Html.ValidationMessage("Error")

                <div class="form-group">
                    @Html.Label("Собственник конструкции:", new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @{
            if ((role == "ChiefEditOwn") || (role == "SupplierEditOwn"))
            {
                @Html.DropDownList("Owner", new SelectList(new[] { user.Company, "Неизвестно" }))
            }
            else
            {
                @Html.DropDownList("Owner", owners)
                            @*@Html.ValidationMessageFor(model => model.IdOwner)*@
            }
                        }
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Support, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Support)
                        @Html.ValidationMessageFor(model => model.Support)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Locality, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Locality)
                        @Html.ValidationMessageFor(model => model.Locality)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Street1, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Street1)
                        @Html.ValidationMessageFor(model => model.Street1)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Street2, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Street2)
                        @Html.ValidationMessageFor(model => model.Street2)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.FromStreet, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FromStreet)
                        @Html.ValidationMessageFor(model => model.FromStreet)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.StartDate, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @{
            string day = "";
            if (Model.StartDate.Date.Day < 10)
            {
                day = "0" + Model.StartDate.Date.Day.ToString();
            }
            else
            {
                day = Model.StartDate.Date.Day.ToString();
            }
            string month = "";
            if (Model.StartDate.Date.Month < 10)
            {
                month = "0" + Model.StartDate.Date.Month.ToString();
            }
            else
            {
                month = Model.StartDate.Date.Month.ToString();
            }
            <input type="date" value="@Model.StartDate.Date.Year-@month-@day" name="startDate" />
                        }
                    </div>
                </div>
                @Html.ValidationMessage("Photo")
                <div class="form-group">
                    @Html.Label("Паспорт ТСМО (стр 1):", new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <input type="file" name="passport1" accept="image/jpeg" /><br />
                        @Html.Raw("Не более 1 МБ")
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Паспорт ТСМО (стр 2):", new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <input type="file" name="passport2" accept="image/jpeg" /><br />
                        @Html.Raw("Не более 1 МБ")
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Фото:", new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <input type="file" name="photo" accept="image/jpeg" /><br />
                        @Html.Raw("Не более 1 МБ")
                    </div>
                </div>
                <div class="form-group" style="width:600px; height:500px" id="map">
                </div>
                <div class="form-group">
                    <label class="control-label col-md-2" for="Shirota">Широта</label>
                    <div class="col-md-10">
                        <input type="text" id="Shirota" value="@Model.Shirota" name="Shirota" readonly required />
                        @Html.ValidationMessageFor(model => model.Shirota)
                        @*<span class="field-validation-valid" data-valmsg-for="Shirota" data-valmsg-replace="true"></span>*@
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-2" for="Dolgota">Долгота</label>
                    <div class="col-md-10">
                        <input type="text" id="Dolgota" value="@Model.Dolgota" name="Dolgota" readonly required />
                        @Html.ValidationMessageFor(model => model.Shirota)
                        @*<span class="field-validation-valid" data-valmsg-for="Dolgota" data-valmsg-replace="true"></span>*@
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Сохранить" class="btn btn-info" />
                    </div>
                </div>
            </div>
        }

    }
}
<div>
    @Html.ActionLink("Вернуться к списку", "Metal")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
