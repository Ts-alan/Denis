@using Sciencecom.Models
@model  Sciencecom.Models.AdvertisingStructure
@{
    var i = 0;
    ViewBag.Title = "MetalPointersStructure";
    //Собственник конструкциии
    var owners = new SciencecomEntities().Owners.ToList();

    //Вид
    var ListTypeAdvertising = new SciencecomEntities().TypeOfAdvertisingStructures.ToList();
    var ListTypeAdvertisingSelected = ListTypeAdvertising.Single(a => a.Code == ViewBag.Code).id;
    //ListTypeAdvertising.Insert(0,null);

    var ViewBids = new SciencecomEntities().ViewBids.OrderBy(a => a.OrderBy).ToList();


    //Элемент улично-дорожной сети
    var ListTypeElementOfTheRoadNetworkName = new SciencecomEntities().TheElementOfTheRoadNetworks.Select(a => new { id = a.id, Value = a.TheElementOfTheRoadNetworkName }).ToList();

    //Статус
    var Status = new SciencecomEntities().Status.OrderBy(x => x.OrderByStatus).Select(a => new { id = a.id, Value = a.NameStatus }).ToList();
    Status.Insert(0, null);

    //Населенный пункт выпадающий список
    var Locality = new SciencecomEntities().Localities.ToList();

    //Направление стороны
    var DirectionSide = new SciencecomEntities().DirectionSides.OrderBy(x => x.OrderBY).ToList();
    //Индификация поверхности
    var IdentificationSide = new SciencecomEntities().Identifications.ToList();
    //IdentificationSide.Insert(0, null);
    //Идентификационный номер
    var PropertyLocation = new SciencecomEntities().PropertyLocations.ToList();

    //Подсветка
    var Backlight = new SciencecomEntities().Backlights.ToList();

}
<script type="text/javascript">
    var i = 0;
    var StartCountForSurface;
    var EndCountForSurface = 0;
    $(document).ready(function ()
    {
        $(document).on('change', '.btn-file :file', function ()
        {
            var input = $(this),
                numFiles = input.get(0).files ? input.get(0).files.length : 1,
                label = input.val().replace(/\\/g, '/').replace(/.*\//, '');
            input.trigger('fileselect', [numFiles, label]);
        });


        $('.btn-file :file').on('fileselect', function (event, numFiles, label)
        {

            var input = $(this).parents('.input-group').find(':text'),
                log = numFiles > 1 ? numFiles + ' files selected' : label;

            if (input.length)
            {
                input.val(log);
            } else
            {
                if (log) alert(log);
            }

        });

        //выпадающий список на согласование
        $("[name=OnAgreement]").change(function ()
        {
            var selectIndex = $("[name=OnAgreement] option:selected").val();

            if (selectIndex == "true")
            {
                $("#ContractHide").css("display", "block");
            }
            if (selectIndex == "false")
            {
                $("#ContractHide").css("display", "none");
            }
        });

        //выщитывание площади для каждой поверхности
        $('#SHeight').change(function ()
        {
            //alert("!!!");
            CalculationOfTheArea(0);
        });
        $('#Width').change(function ()
        {
            //alert("!!!");
            CalculationOfTheArea(0);
        });
    });

    // подсчет суммы площадей
    function CalculationAS()
    {
        var Summ = 0;
        $("[selectforspace]").each(function (indx, element)
        {
            if ($(element).val() != "")
            {
                Summ += parseInt($(element).val());
            }
        });
        $("#ConstructionSquare").val(Summ);
    }

    //кол-во сторон
    function SetCountSize()
    {
        EndCountForSurface = 0;
        var CountSizes = $('#CountSizes').val();
        $("#CountSize").val(CountSizes);
        if (CountSizes != "")
        {
            $("[code]").each(function (indx, element)
            {
                element.remove();
            });

            for (var i = 1; i <= CountSizes; i++)
            {
                $("#InsertSide").before("<div code class=\"form-horizontal\" >" +
                    "<div class=\"form-group\" >" +
                    "<h3 class=\"control-label col-md-2\" for=\"\" style=\"margin-left: 55px\">Сторона  " + i + " </h3>" +
                    "</div>" +
                    "<div class=\"form-group\">" +
                    "<div class=\"col-md-10\">" +
                    "<b>Количество поверхностей</b>" +
                    " <select class=\"text-box single-line\" id=\"AddButton" + i + "\" onchange=AddSurface(" + i + ") name=\"CountSurfuce" + i + "\" IdentificationForCountSide=\"\" type=\"text\" data-val=\"true\" data-val-required=\"Укажите кол-во сторон\">" +
                    "<option></option>" +
                    "<option>1</option>" +
                    "<option>2</option>" +
                    "<option>3</option>" +
                    "<option>4</option>" +
                    "<option>5</option>" +
                    "<option>6</option>" +
                    "<option>7</option>" +
                    "<option>8</option>" +
                    "</select> &nbsp;&nbsp;&nbsp; <b>Направление стороны</b>" + '@Ajax.JavaScriptStringEncode(Html.DropDownList("DirectionSide", new SelectList(DirectionSide, "id", "NameOfDirectionSide"), "", new {IdentificationForDirectionSide = "IdentificationForDirectionSide"}).ToHtmlString().Replace("\"", " "))' +
                    "</div>" + '@Ajax.JavaScriptStringEncode(Html.ValidationMessage("[0].IdentificationForDirectionSide").ToHtmlString().Replace("\"", " "))' +
                    "</div> <div style=\"display: none\" id=\"" + i + "HiddenIdentification\"> &nbsp;&nbsp;&nbsp;<b>Идентификация поверхностей</b>" + '@Ajax.JavaScriptStringEncode(Html.DropDownList("IdentificationSurface", new SelectList(IdentificationSide, "id", "IdentificationName"), "", new {IdentificationForIdentificationSurface = "IdentificationForIdentificationSurface"}).ToHtmlString().Replace("\"", " ")) </div>' +
                    "<div  id=\"InsertPartial" + i + "\"></div>" +
                    "</div>");

                $("#SizeOfCount").val(CountSizes);
            }
        }
        //Навешивание валидации
        $('[name="DirectionSide"]').each(function (indx, element)
        {
            $(element).attr("name", "[" + indx + "].IdentificationForDirectionSide");
        });

        //другое решение не тестил
        //$('[name="DirectionSide"]').data('validator', null);
        //$.validator.unobtrusive.parse('[name="DirectionSide"]');
    }

    //Добавить поверхность+
    function AddSurface(i)
    {
        var count = $("#AddButton" + i + "").val();
        StartCountForSurface = EndCountForSurface;
        EndCountForSurface = parseInt(count) + parseInt(EndCountForSurface);

        if (count == 1)
        {
            $("#" + i + "HiddenIdentification").hide();
        } else
        {
            $("#" + i + "HiddenIdentification").show();
            //валидация
            $('[name="IdentificationSurface"]').each(function (indx, element)
            {
                $(element).attr("name", "[" + indx + "].IdentificationForIdentificationSurface");
            });
        }
        $("[side=" + i + "]").remove();


        $.ajax('@Url.Action("AddSurface", "Data")', { data: { side: i, StartCountForSurface: StartCountForSurface, EndCountForSurface: EndCountForSurface } })
            .success(function (e)
            {
                $("#InsertPartial" + i + "").before(e);
            });
    }


    //выщитывание площади для каждой поверхности
    function CalculationOfTheArea(j)
    {
        var Height = $('[name="[' + j + '].Height"]').val();
        var Width = $('[name="[' + j + '].Width"]').val();

        if (Height != "" && Width != "")
        {
            var Sum = Height * Width;

            $('[name="[' + j + '].Space"]').val(Sum);
            CalculationAS();
        }
    }


</script>
<style>
    .form-horizontal .form-group {
        margin-left: 0px;
        margin-right: 0px;
    }
</style>
<h3> КАРТОЧКА СВЕТОВОГО КОРОБА</h3>

@Scripts.Render("~/Content/Map")
@using (Html.BeginForm("CreateLightDuctDesign", "Data", FormMethod.Post, new { enctype = "multipart/form-data", id = "test1" }))
{
    <input type="hidden" name="Code" value="@ViewBag.Code">
    <h3>Общие данные о конструкции</h3>
    @Html.AntiForgeryToken()
    <div class="form-inline">
        <hr />

        <input type="hidden" id="CountSize" id="SizeOfCount" name="CountSize" value="">
        @Html.ValidationSummary(true)
        @Html.ValidationMessage("Error")

        <div class="form-group">
            <label for="Owner">Собственник </label>
            @Html.DropDownListFor(a => a.Owner_Id, new SelectList(owners, "id", "Name"), new { @class = "form-control input-sm" })
            @Html.ValidationMessageFor(model => model.Owner_Id)
        </div>

        <div class="form-group">
            <label for="Locality">Вид</label>
            @Html.DropDownListFor(a => a.Code, new SelectList(ListTypeAdvertising, "Code", "Name"), new { @disabled = "disabled", @class = "form-control input-sm" })
            @Html.ValidationMessageFor(model => model.Code)
        </div>

        <div class="form-group">
            <label for="Status">Статус</label>
            @Html.DropDownListFor(a => a.Status_Id, new SelectList(Status, "id", "Value", ""), new { @class = "form-control input-sm" })
            @Html.ValidationMessageFor(model => model.Status_Id)
        </div>

        <div class="form-group">
            <label for="UniqueNumber">Идентификационный номер</label>
            <input class="text-box single-line form-control" name="UniqueNumber" data-val="true" data-val-required="Введите значение " type="text" value="@ViewBag.UniqueNumber">
            @Html.ValidationMessageFor(model => model.UniqueNumber)
        </div>
        <br>

    </div>
    <div class="form-horizontal">
        <div class="form-group">
            <label for="Owner">конструкции </label>
        </div>
    </div>
    <div class="form-inline">
        <div class="form-group">
            <label for="PropertyLocation_id" style="display:none;">Форма собственности места размещения </label>
            @Html.DropDownListFor(a => a.PropertyLocation_id, new SelectList(PropertyLocation, "id", "NamePropertyLocation"), "", new { style = "display:none;" })
            @Html.ValidationMessageFor(model => model.PropertyLocation_id)
        </div>

        <div class="form-group">
            <label for="Owner" style="display:none;">Собственник места размещения</label>
            @Html.EditorFor(model => model.OwnerPlacements, new { htmlattributes = new { style = "display:none;" } })
            @Html.ValidationMessageFor(model => model.OwnerPlacements)
        </div>

    </div>
    <h3>Данные о месте расположения конструкции</h3>

    <div class="form-inline">
        <hr />
        <div class="form-group">
            <label for="Locality">Нас. пункт</label>
            @Html.DropDownListFor(a => a.Locality_id, new SelectList(Locality, "id", "NameLocality", "dbfd4d94-48be-4136-b900-74bc2c5c04aa"), new { @class = "form-control input-sm" })
            @Html.ValidationMessageFor(model => model.Locality_id)
        </div>

        <div class="form-group">
            <label for="Street1">Улица</label>
            @Html.TextBoxFor(model => model.Street1, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Street1)
        </div>

        <div class="form-group">
            <label for="House1">Номер опоры</label>
            @Html.TextBoxFor(model => model.Support_, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Support_)
        </div>


    </div>
    <input type="button" id="MapSearchStreet" value="Поиск на карте" style="margin-left: 185px; margin-top:5px" class="btn">

    <div class="form-inline" style="display: none">
        <div class="form-group">
            <label for="Street2">Ближайшая улица по ходу движения</label>
            @Html.EditorFor(model => model.Street2)
            @Html.ValidationMessageFor(model => model.Street2)
        </div>

        <div class="form-group">
            <label for="FromStreet">Со стороны улицы</label>
            @Html.EditorFor(model => model.FromStreet)
            @Html.ValidationMessageFor(model => model.FromStreet)
        </div>
    </div>

    <div class="form-inline" style="margin-top: 20px; display: none;">

        <div class="form-group">
            <label for="TheElementOfTheRoadNetwork">Элемент улично-дорожной сети</label>
            @Html.DropDownListFor(a => a.TheElementOfTheRoadNetwork_id, new SelectList(ListTypeElementOfTheRoadNetworkName, "id", "Value"), "")
            @Html.ValidationMessageFor(a => a.TheElementOfTheRoadNetwork_id)
        </div>

    </div>
    <div class="form-inline">
        <hr />
        <div class="form-group" style="width: 600px; height: 500px" id="map"></div>

        <div class="form-group">
            <table>
                <tr>
                    <td>
                        <label for="Breadth">Широта </label>
                    </td>
                    <td>
                        <input class="text-box single-line form-control" data-val="true" type="text" name="Breadth" id="Breadth">
                        <span data-valmsg-for="Breadth" data-valmsg-replace="true"></span>
                    </td>
                </tr>
                <tr>
                    <td>
                        <label for="Height">Долгота</label>
                    </td>
                    <td>
                        <input type="text" name="Height" data-val="true" id="Height" class="form-control">

                        @Html.ValidationMessageFor(model => model.Height)

                    </td>
                </tr>
            </table>
        </div>
    </div>

    <h3>Проект ОДД</h3>
    <div class="form-horizontal">
        <hr />
        <div class="row">
            <div class="col-md-2">
                <label for="DateOfIssue">Дата выдачи проекта ОДД</label>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    @Html.TextBoxFor(model => model.DateOfIssue, new {@class = "form-control"})
                    @Html.ValidationMessageFor(model => model.DateOfIssue)
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-4">
                <label for="Scan1Side">Скан проекта ОДД (Сторона 1)</label>
            </div>
            <div class="col-md-4">
                <label for="Scan2Side">Скан проекта ОДД (Сторона 2)</label>
            </div>

        </div>
        <div class="row">
            <div class="col-md-4">
                <div class="input-group ">
                    <span class="input-group-btn">
                        <span class="btn btn-primary btn-file">
                            Выберите файл&hellip; <input type="file" name="Scan1Side" accept="image/jpeg" />
                        </span>
                    </span>
                    <input type="text" class="form-control" readonly>
                </div>
                @*<input type="file" name="Scan1Side" accept="image/jpeg"/><br/>
                     <br/>
                    <span data-valmsg-for="Scan1Side" data-valmsg-replace="true"></span>
                *@
                @Html.Raw("Не более 1 МБ")
            </div>
            <div class="col-md-4">
                <div class="input-group ">
                    <span class="input-group-btn">
                        <span class="btn btn-primary btn-file">
                            Выберите файл&hellip; <input type="file" name="Scan2Side" accept="image/jpeg" />
                        </span>
                    </span>
                    <input type="text" class="form-control" readonly>
                </div>
                @*<input type="file" name="Scan2Side" accept="image/jpeg"/><br/>
                    <span data-valmsg-for="Scan2Side" data-valmsg-replace="true"></span>
                *@
                @Html.Raw("Не более 1 МБ")
            </div>
        </div>

        <div class="row" style="margin-top: 15px">
            <div class="col-md-2">
                <label for="C_PassportAdvertising">№ паспорта рекламы</label>
            </div>
            <div class="col-md-2">
                @Html.TextBoxFor(model => model.C_PassportAdvertising, new {@class = "form-control"})
                @Html.ValidationMessageFor(model => model.C_PassportAdvertising)
            </div>
            <div class="col-md-2">
                <label for="DateOfTakenPassport">Дата выдачи паспорта</label>
            </div>
            <div class="col-md-2">
                @Html.TextBoxFor(model => model.StartDate, new {@class = "form-control", @type = "date"})
                @Html.ValidationMessageFor(model => model.DateOfTakenPassport)
            </div>
        </div>

        <div class="row" style="margin-top: 15px">
            <div class="col-md-2">
                <label for="StartDate">разреш с</label>
            </div>
            <div class="col-md-2">
                @Html.TextBoxFor(model => model.StartDate, new {@class = "form-control", @type = "date"})
                @Html.ValidationMessageFor(model => model.StartDate)
            </div>
            <div class="col-md-2">
                 <label for="EndDate">разреш по</label>
            </div>
            <div class="col-md-2">
                @Html.TextBoxFor(model => model.StartDate, new {@class = "form-control", @type = "date"})
                @Html.ValidationMessageFor(model => model.EndDate)
            </div>
        </div>
    </div>

    <div class="row" style="margin-top: 15px">
        <div class="col-md-4">
            <label for="ScanPassport_1Sides">Скан паспорта (стор 1)</label>
        </div>
        <div class="col-md-4">
            <label for="ScanPassport_2Sides">Скан паспорта (стор 2)</label>
        </div>
    </div>

     <div class="row">
         <div class="col-md-4">
             <div class="input-group ">
                    <span class="input-group-btn">
                        <span class="btn btn-primary btn-file">
                            Выберите файл&hellip; <input type="file" name="ScanPassport_1Sides" accept="image/jpeg" />
                        </span>
                    </span>
                    <input type="text" class="form-control" readonly>
                </div>
             @*<input type="file" name="ScanPassport_1Sides" accept="image/jpeg"/><br/>*@
             <span data-valmsg-for="ScanPassport_1Sides" data-valmsg-replace="true"></span>
             @Html.Raw("Не более 1 МБ")
         </div>
         <div class="col-md-4">
             <div class="input-group ">
                    <span class="input-group-btn">
                        <span class="btn btn-primary btn-file">
                            Выберите файл&hellip; <input type="file" name="ScanPassport_2Sides" accept="image/jpeg" />
                        </span>
                    </span>
                    <input type="text" class="form-control" readonly>
                </div>
             @*<input type="file" name="ScanPassport_2Sides" accept="image/jpeg"/><br/>*@
             <span data-valmsg-for="ScanPassport_2Sides" data-valmsg-replace="true"></span>
             @Html.Raw("Не более 1 МБ")
         </div>
        </div>

        <div class="form-horizontal">

            <div class="form-group">

                <label for="Scan1SidesWithFinancialManagement" style="display: none">Скан 1 страницы договора с финанаосвым управлением</label>
                <input type="file" name="Scan1SidesWithFinancialManagement" style="display: none" accept="image/jpeg" /><br />
                <span class="field-validation-valid" data-valmsg-for="Scan1SidesWithFinancialManagement" data-valmsg-replace="true" style="display: none"></span>
                @*@Html.Raw("Не более 1 МБ")*@

            </div>
        </div>

        <h3>Описание конструкции</h3>
        <hr />

        <div class="form-inline" style="display: none;">
            <hr />
            <div class="form-group">
                <label for="PlannedInstallationDate" style="display: none;">Планируемая дата установки</label>
                @Html.EditorFor(model => model.PlannedInstallationDate, new { htmlattributes = new { style = "display:none;" } })

                @Html.ValidationMessageFor(model => model.PlannedInstallationDate)
            </div>

            <div class="form-group">
                <label for="DateOfActualInstallation" style="display: none;">Дата фактической установки</label>
                @Html.EditorFor(model => model.DateOfActualInstallation, new { htmlattributes = new { style = "display:none;" } })
                @Html.ValidationMessageFor(model => model.DateOfActualInstallation)
            </div>
        </div>

        <div class="form-inline" style="display:none">
            <hr />
            <div class="form-group">
                <label>Дата согласования</label>
                @Html.EditorFor(model => model.CoordinationDate)

                @Html.ValidationMessageFor(model => model.CoordinationDate)
            </div>
        </div>
        <div class="form-inline" style="display: none;">

            <div class="form-group">
                <label>Описание рамещаемой информации</label>
                @Html.TextAreaFor(model => model.ContentInformationDescription, new { cols = "90", rows = "4" })

                @Html.ValidationMessageFor(model => model.ContentInformationDescription)
            </div>
        </div>
        <div class="form-horizontal" style="margin-top: 18px">
            <div class="form-group">

                <div class="body-content" style="margin-top: 40px">

                    <div side="1">
                        <input name="[0].SideOfSurface" value="1" type="hidden">

                        <div class="form-inline">

                            <div class="form-group has-feedback" style="margin-right: 25px">
                                <input name="[0].NumberSurface" value="1" type="hidden">

                                <label for="[0].Height">Высота</label>
                                <span class="field-validation-valid" data-valmsg-for="[0].Height" data-valmsg-replace="true"></span>
                                <input class="text-box single-line form-control" data-val="true" data-val-number="Значением поля Height должно быть число." id="SHeight" name="[0].Height" value="" type="number">
                                <span class="glyphicon form-control-feedback" ></span>
                            </div>
                                
                            <div class="form-group has-feedback" style="margin-right: 25px">
                                <label for="[0].Width">Ширина</label>
                                <span class="field-validation-valid" data-valmsg-for="[0].Width" data-valmsg-replace="true"></span>
                                <input class="text-box single-line form-control" data-val="true" data-val-number="Значением поля Width должно быть число." name="[0].Width" id="Width" value="" type="number">
                                <span class="glyphicon form-control-feedback" ></span>
                            </div>

                               

                            <div class="form-group has-feedback" style="margin-right: 25px">
                                <label for="[0].Space">Площадь</label>
                                <span class="field-validation-valid" data-valmsg-for="[0].Space" data-valmsg-replace="true"></span>
                                <input class="form-control" selectforspace="" data-val="true" data-val-number="Значением поля Space должно быть число." name="[0].Space" onchange="CalculationAS()" value="" type="number" readonly="readonly">
                                <span class="glyphicon form-control-feedback" ></span>
                            </div>

                                
                           
                        </div>

                    </div>


                </div>
            </div>
        </div>
        <div id="InsertSide" style="display: none">
            <div code="" class="form-horizontal">
                <div class="form-group">
                    <select class="text-box single-line" id="AddButton1" onchange="AddSurface(1)" name="CountSurfuce1" identificationforcountside="" type="text" data-val="true" data-val-required="Укажите кол-во сторон">
                        <option selected="selected">1</option>
                    </select>
                    <select class="valid" identificationfordirectionside="IdentificationForDirectionSide" id="DirectionSide" name="[0].IdentificationForDirectionSide">

                        <option value="27b8c509-8f09-4a0d-ae22-048c2611b7ea" selected="selected">По ходу движения (сторона А)</option>
                    </select>

                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Сохранить" class="btn btn-default" />
                @Html.ActionLink("Выйти без сохранения", "AdvertisingDesign", null, new { @class = "btn btn-default" })
            </div>
        </div>
}
