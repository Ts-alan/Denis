@using Newtonsoft.Json
@using Sciencecom.Models
@model  AdvertisingStructure
@{
    var i = 0;
    ViewBag.Title = "EditLightDuctDesign";
    //Собственник конструкциии
    var owners = new SciencecomEntities().Owners.ToList();

    //Вид
    var ListTypeAdvertising = new SciencecomEntities().TypeOfAdvertisingStructures.ToList();

    //ListTypeAdvertising.Insert(0,null);

    var ViewBids = new SciencecomEntities().ViewBids.OrderBy(a => a.OrderBy).ToList();


    //Элемент улично-дорожной сети
    var ListTypeElementOfTheRoadNetworkName = new SciencecomEntities().TheElementOfTheRoadNetworks.Select(a => new { id = a.id, Value = a.TheElementOfTheRoadNetworkName }).ToList();

    //Статус
    var Status = new SciencecomEntities().Status.OrderBy(x => x.OrderByStatus).Select(a => new { id = a.id, Value = a.NameStatus }).ToList();
    Status.Insert(0, null);

    //Населенный пункт выпадающий список
    var Locality = new SciencecomEntities().Localities.ToList();

    //Направление стороны
    var DirectionSide = new SciencecomEntities().DirectionSides.OrderBy(x => x.OrderBY).ToList();
    //Индификация поверхности
    var IdentificationSide = new SciencecomEntities().Identifications.ToList();
    //IdentificationSide.Insert(0, null);
    //Идентификационный номер
    var PropertyLocation = new SciencecomEntities().PropertyLocations.ToList();

    //Подсветка
    var Backlight = new SciencecomEntities().Backlights.ToList();

    //Подсветка
    //var ContentInformationDescription = new SciencecomEntities().Backlights.ToList();


}

<script type="text/javascript">
    var i = 0;

    var havePlacemark = @Model.Breadth.HasValue.ToString().ToLower();

    var StartCountForSurface ;
    var EndCountForSurface = 0;
    var isGreateAdvertisingDesign = false;
    var ArrayOfSides = @Html.Raw(JsonConvert.SerializeObject(Model.Sides.Select(a=>new {a.DirectionSide_id,length= a.Surfaces.Count,a.Identification_id}), Formatting.Indented, new JsonSerializerSettings
    {
       ReferenceLoopHandling = ReferenceLoopHandling.Ignore
    }));

    
        //Заполнение полей с рамерами конструкции
        @*$("#SHeight").val("@Model.Sides.FirstOrDefault().Surfaces.FirstOrDefault().Height");
        $("#Width").val("@Model.Sides.FirstOrDefault().Surfaces.FirstOrDefault().Width");
        $("#SSpace").val("@Model.Sides.FirstOrDefault().Surfaces.FirstOrDefault().Space");*@
       



        //отключение валидации
        //$.validator.methods.number = function (value, element) {
        //    return this.optional(element) || /^-?(?:\d+|\d{1,3}(?:[\s\.,]\d{3})+)(?:[\.,]\d+)?$/.test(value);
        //}
        //накручивание данных в поля
        //window.onload = SetCountSize();
        $("[identificationfordirectionside]").each(function(indx, element) {
            $(element)[0].value =ArrayOfSides[indx].DirectionSide_id;

        });
        $("[identificationforcountside]").each(function(indx, element) {
            $(element)[0].value = ArrayOfSides[indx].length;

             //AddSurface(indx+1);
        });

        //выпадающий список на согласование
        $("[name=OnAgreement]").change(function() {
            var selectIndex = $("[name=OnAgreement] option:selected").val();

            if (selectIndex == "true") {
                $("#ContractHide").css("display", "block");
            }
            if (selectIndex == "false") {
                $("#ContractHide").css("display", "none");
            }

        });

        //выщитывание площади для каждой поверхности

        $('#SHeight').change(function () {
            //alert("!!!");
            CalculationOfTheArea(0);
        });
        $('#Width').change(function () {
            //alert("!!!");
            CalculationOfTheArea(0);
        });

        function CalculationOfTheArea(j) {

            var Height = $('[name="[' + j + '].Height"]').val();
            var Width = $('[name="[' + j + '].Width"]').val();

            if (Height != "" && Width != "") {

                var Sum = Height * Width;

                $('[name="[' + j + '].Space"]').val(Sum);
                CalculationAS();
            }
        }
    

    // подсчет суммы площадей
    function CalculationAS() {

        var Summ=0;
        $("[selectforspace]").each(function(indx, element) {
            if ($(element).val() != "") {
                Summ += parseInt($(element).val());
            }
        });
        $("#ConstructionSquare").val(Summ);
    }

    //$(document).ready(function(){
    //    $("#test1").removeAttr("novalidate");
    //    $("#test1").validate();
    //    $("#Width").rules("add", {
    //        min: 1
    //    });
    //});
    
</script>
<h3> КАРТОЧКА СВЕТОВОГО КОРОБА</h3>
@Scripts.Render("~/Content/Map")

@using (Html.BeginForm("EditLightDuctDesign", "Data", FormMethod.Post, new { enctype = "multipart/form-data", id = "test1" }))
{
    <div class="form-inline" style="display:none">
        <div class="form-group">
            <div id="InsertSide">
                <div class="form-horizontal">
                    <div class="form-group">
                        <select class="text-box single-line" id="AddButton1" name="CountSurfuce1" identificationforcountside="" type="text" data-val="true" data-val-required="Укажите кол-во сторон">
                            <option selected="selected">1</option>
                        </select>
                        <select identificationforidentificationsurface="IdentificationForIdentificationSurface" true="" data-val-required="Выберете" id="IdentificationSurface" name="[0].IdentificationForIdentificationSurface">
                            <option value=""></option>
                            <option selected="selected" value="4610cf49-0360-4edb-9f05-752f7d574dcc">Вертикальная</option>
                            <option value="95ee0238-134f-4a5c-a9ec-a9f0f02c2c75">Горизонтальная </option>
                        </select>
                        <select class="valid" identificationfordirectionside="IdentificationForDirectionSide" id="DirectionSide" name="[0].IdentificationForDirectionSide">
                            <option value="27b8c509-8f09-4a0d-ae22-048c2611b7ea" selected="selected">По ходу движения (сторона А)</option>
                        </select>
                    </div>
                </div>
            </div>
            @*<div style="margin-left: -15px;" id="1HiddenIdentification">
                    &nbsp;&nbsp;&nbsp;<b>Идентификация поверхностей</b>
                    <select identificationforidentificationsurface="IdentificationForSurface" true="" data-val-required="Выберете" id="IdentificationSurface" name="[0].IdentificationForIdentificationSurface">
                        <option value=""></option>
                        <option selected="selected" value="4610cf49-0360-4edb-9f05-752f7d574dcc">Вертикальная</option>
                        <option value="95ee0238-134f-4a5c-a9ec-a9f0f02c2c75">Горизонтальная </option>
                    </select>
                </div>*@
        </div>
    </div>

    <h3> 1. Общие данные о конструкции</h3>
    @Html.AntiForgeryToken()
    <div class="form-inline" style="margin-bottom: -10px">
        <hr />

        <input type="hidden" id="CountSize" name="CountSize" value="">
        @Html.ValidationSummary(true)
        @Html.ValidationMessage("Error")

        <div class="form-group">
            <label for="Owner">Собственник </label>
            @Html.DropDownListFor(a => a.Owner_Id, new SelectList(owners, "id", "Name"), "")
            @Html.ValidationMessageFor(model => model.Owner_Id)
        </div>

        <div class="form-group">
            <label for="Locality">Вид</label>
            @Html.DropDownListFor(a => a.Code, new SelectList(ListTypeAdvertising, "Code", "Name"), new { @disabled = "disabled" })
            @Html.HiddenFor(a => a.Code)
            @Html.ValidationMessageFor(model => model.Code)
        </div>

        <div class="form-group">
            <label for="Status">Статус</label>
            @Html.DropDownListFor(a => a.Status_Id, new SelectList(Status, "id", "Value"))
            @Html.ValidationMessageFor(model => model.Status_Id)
        </div>

        <div class="form-group">
            <label for="UniqueNumber">Идентификационный номер</label>
            @Html.EditorFor(model => model.UniqueNumber, new { disabled = "disabled", @readonly = "readonly" })
            @Html.ValidationMessageFor(model => model.UniqueNumber)
        </div>
        <br>

    </div>
            <div class="form-horizontal">
                <div class="form-group">
                    <label for="Owner">конструкции </label>
                </div>
            </div>
            <div class="form-inline">
                <div class="form-group">
                    <label for="PropertyLocation_id" style="display: none;">Форма собственности места размещения </label>
                    @Html.DropDownListFor(a => a.PropertyLocation_id, new SelectList(PropertyLocation, "id", "NamePropertyLocation"), "", new { style = "display:none;" })
                    @Html.ValidationMessageFor(model => model.PropertyLocation_id)
                </div>

                <div class="form-group">
                    <label for="Owner" style="display: none;">Собственник места размещения</label>
                    @Html.EditorFor(model => model.OwnerPlacements, new { htmlAttributes = new { style = "display:none" } })
                    @Html.ValidationMessageFor(model => model.OwnerPlacements)
                </div>

            </div>

            <h3> 2.Данные о месте расположения конструкции</h3>

            <div class="form-inline">
                <hr />
                <div class="form-group" style="margin-left: -15px">
                    <label for="Locality">Нас. пункт</label>
                    @Html.DropDownListFor(a => a.Locality_id, new SelectList(Locality, "id", "NameLocality"))
                    @Html.ValidationMessageFor(model => model.Locality_id)
                </div>

                <div class="form-group">
                    <label for="Street1">Улица</label>
                    @Html.EditorFor(model => model.Street1, new { htmlattributes = new { @class = "ui-autocomplete-input" } })
                    @Html.ValidationMessageFor(model => model.Street1)
                </div>

                <div class="form-group">
                    <label for="House1">Номер опоры</label>
                    @Html.EditorFor(model => model.Support_)
                    @Html.ValidationMessageFor(model => model.Support_)
                </div>

            </div>
            <input type="button" id="MapSearchStreet" value="Поиск на карте" style="margin-left: 185px">

            <div class="form-inline" style="display: none">
                <div class="form-group">
                    <label for="Street2">Ближайшая улица по ходу движения</label>
                    @Html.EditorFor(model => model.Street2)
                    @Html.ValidationMessageFor(model => model.Street2)
                </div>

                <div class="form-group">
                    <label for="FromStreet">Со стороны улицы</label>
                    @Html.EditorFor(model => model.FromStreet)
                    @Html.ValidationMessageFor(model => model.FromStreet)
                </div>
            </div>

                        <div class="form-inline" style="margin-top: 20px">

                            <div class="form-group" style="display: none">
                                <label for="TheElementOfTheRoadNetwork">Элемент улично-дорожной сети</label>
                                @Html.DropDownListFor(a => a.TheElementOfTheRoadNetwork_id, new SelectList(ListTypeElementOfTheRoadNetworkName, "id", "Value"), "")
                                @Html.ValidationMessageFor(a => a.TheElementOfTheRoadNetwork_id)
                            </div>

                        </div>

                        <div class="form-inline">
                            <hr />
                            <div class="form-group" style="width: 600px; height: 500px" id="map"></div>

                            <div class="form-group">

                                <div>
                                    <label for="Breadth">Широта </label>

                                    @Html.EditorFor(model => model.Breadth)
                                    @Html.ValidationMessageFor(model => model.Breadth)
                                </div>

                                <div>
                                    <label for="Height">Долгота</label>
                                    @Html.EditorFor(model => model.Height)
                                </div>
                            </div>
                        </div>
                       
                        <h3> 3.Проект odd</h3>
                        <div class="form-horizontal">
                            <hr />
                            <div class="form-group">

                                <label for="ViewBad_Id" style="display: none;">Вид заявки</label>
                                @Html.DropDownListFor(model => model.ViewBad_Id, new SelectList(ViewBids, "id", "Name"), "", new { style = "display:none;" })
                                @Html.ValidationMessageFor(model => model.ViewBad_Id)


                                <label for="DateOfReceiptOfTheApplication" style="display: none;">Дата подачи заявки</label>
                                @Html.EditorFor(model => model.DateOfReceiptOfTheApplication, new { htmlattributes = new { style = "display:none;" } })
                                @Html.ValidationMessageFor(model => model.DateOfReceiptOfTheApplication)

                            </div>

                            <div class="form-group">
                                <label for="DateOfIssue">Дата выдачи проекта ODD</label>
                                @Html.EditorFor(model => model.DateOfIssue)
                                @Html.ValidationMessageFor(model => model.DateOfIssue)

                            </div>

                            <div class="form-inline">

                                <div class="form-group">
                                    <label for="Scan1Side">Скан проекта ODD (Сторона 1)</label>
                                    <input type="file" name="Scan1Side" accept="image/jpeg" /><br />
                                    <span data-valmsg-for="Scan1Side" data-valmsg-replace="true"></span>
                                    @Html.Raw("Не более 1 МБ")
                                </div>

                                <div class="form-group">
                                    <label for="Scan2Side">Скан проекта ODD (Сторона 2)</label>
                                    <input type="file" name="Scan2Side" accept="image/jpeg" /><br />
                                    <span data-valmsg-for="Scan2Side" data-valmsg-replace="true"></span>
                                    @Html.Raw("Не более 1 МБ")
                                </div>

                            </div>


                            <div class="form-group" style="margin-bottom: 5px">

                                <label for="C_PassportAdvertising">№ паспорта рекламы</label>
                                @Html.EditorFor(model => model.C_PassportAdvertising)
                                @Html.ValidationMessageFor(model => model.C_PassportAdvertising)


                                <label for="DateOfTakenPassport">Дата выдачи паспорта</label>
                                @Html.EditorFor(model => model.DateOfTakenPassport)
                                @Html.ValidationMessageFor(model => model.DateOfTakenPassport)

                            </div>

                            <div class="form-group" style="margin-bottom: 5px">
                                <label for="StartDate">разреш с</label>
                                @Html.EditorFor(model => model.StartDate)
                                @Html.ValidationMessageFor(model => model.StartDate)

                                <label for="EndDate">разреш по</label>
                                @Html.EditorFor(model => model.EndDate)
                                @Html.ValidationMessageFor(model => model.EndDate)
                            </div>

                        </div>

                        <div class="form-inline">

                            <div class="form-group">
                                <label for="ScanPassport_1Sides">Скан паспорта (стор 1)</label>
                                <input type="file" name="ScanPassport_1Sides" accept="image/jpeg" /><br />
                                <span data-valmsg-for="ScanPassport_1Sides" data-valmsg-replace="true"></span>
                                @Html.Raw("Не более 1 МБ")
                            </div>

                            <div class="form-group">
                                <label for="ScanPassport_2Sides">Скан паспорта (стор 2)</label>
                                <input type="file" name="ScanPassport_2Sides" accept="image/jpeg" /><br />
                                <span data-valmsg-for="ScanPassport_2Sides" data-valmsg-replace="true"></span>
                                @Html.Raw("Не более 1 МБ")
                            </div>
                        </div>

                        <div class="form-horizontal">

                            <div class="form-group" style="margin-bottom: 5px">
                                <label for="C_ContractFinancialManagement" style="display: none">№ договора с финансовым управлением</label>
                                @*@Html.EditorFor(model => model.C_ContractFinancialManagement)
                                    @Html.ValidationMessageFor(model => model.C_ContractFinancialManagement)*@

                                <label for="TheDateOfTheContract" style="display: none">Дата договора</label>
                                @*@Html.EditorFor(model => model.TheDateOfTheContract)
                                    @Html.ValidationMessageFor(model => model.TheDateOfTheContract)*@

                            </div>

                            <div class="form-group">

                                <label for="Scan1SidesWithFinancialManagement" style="display: none">Скан 1 страницы договора с финанаосвым управлением</label>
                                <input type="file" name="Scan1SidesWithFinancialManagement" style="display: none" accept="image/jpeg" /><br />
                                <span class="field-validation-valid" data-valmsg-for="Scan1SidesWithFinancialManagement" data-valmsg-replace="true" style="display: none"></span>
                                @*@Html.Raw("Не более 1 МБ")*@

                            </div>
                        </div>

                        <h3> 4.Описание конструкции</h3>
                        <div class="form-inline" style="display: none">
                            <hr />
                            <div class="form-group">
                                <label>Описание рамещаемой информации</label>
                                @Html.TextAreaFor(model => model.ContentInformationDescription, new { cols = "90", rows = "4" })

                                @Html.ValidationMessageFor(model => model.ContentInformationDescription)
                            </div>
                        </div>
                        <div class="form-inline">
                            <hr />
                            <div class="form-group">
                                <label for="PlannedInstallationDate" style="display: none;">Планируемая дата установки</label>
                                @Html.EditorFor(model => model.PlannedInstallationDate, new { htmlattributes = new { style = "display:none;" } })
                                @Html.ValidationMessageFor(model => model.PlannedInstallationDate)
                            </div>

                            <div class="form-group">
                                <label for="DateOfActualInstallation" style="display: none;">Дата фактической установки</label>
                                @Html.EditorFor(model => model.DateOfActualInstallation, new { htmlattributes = new { style = "display:none;" } })
                                @Html.ValidationMessageFor(model => model.DateOfActualInstallation)
                            </div>

                        </div>
                        <div class="form-horizontal">
                            <div class="form-group">
                                <label for="DateDismantling" style="display: none;">Дата демонтажа</label>
                                @Html.EditorFor(model => model.DateDismantling, new { htmlattributes = new { style = "display:none;" } })
                                @Html.ValidationMessageFor(model => model.DateDismantling)
                            </div>
                        </div>
                        <div class="form-inline" style="display: none">

                            <div class="form-group">
                                <label for="CommentOwner">Подсветка</label>
                                @Html.DropDownListFor(a => a.Backlight_Id, new SelectList(Backlight, "id", "Name"), "")
                                @Html.ValidationMessageFor(model => model.Backlight_Id)
                            </div>

                            <div class="form-group">
                                <label for="CommentOwner">Комментарий</label>
                                @Html.EditorFor(model => model.CommentOwner)
                            </div>

                        </div>
                        <div class="form-horizontal" style="margin-top: 18px">
                            <div class="form-group">
                                <label for="ConstructionSquare">Площадь конструкции</label>
                                <input id="ConstructionSquare" readonly name="ConstructionSquare" style="background-color: lightgray" type="text" value="">

                            </div>

                        </div>
                        <div class="form-inline" style="display: none;">
                            <hr />
                            <div class="form-group">
                                <label for="PlannedInstallationDate" style="display: none;">Планируемая дата установки</label>
                                @Html.EditorFor(model => model.PlannedInstallationDate, new { htmlattributes = new { style = "display:none;" } })

                                @Html.ValidationMessageFor(model => model.PlannedInstallationDate)
                            </div>

                            <div class="form-group">
                                <label for="DateOfActualInstallation" style="display: none;">Дата фактической установки</label>
                                @Html.EditorFor(model => model.DateOfActualInstallation, new { htmlattributes = new { style = "display:none;" } })
                                @Html.ValidationMessageFor(model => model.DateOfActualInstallation)
                            </div>
                        </div>

                        <div class="form-inline">
                            <hr />
                            <div class="form-group">
                                <label>Дата согласования</label>
                                @Html.EditorFor(model => model.CoordinationDate)

                                @Html.ValidationMessageFor(model => model.CoordinationDate)
                            </div>
                        </div>

                        <div class="form-horizontal" style="margin-top: 18px">
                            <div class="form-group">

                                <div class="body-content" style="margin-top: 40px">
                                    
                                    <div side="1">
                                        <input name="[0].SideOfSurface" value="1" type="hidden">

                                        <div class="form-inline">
                                            
                                            <div class="form-group">

                                                <input name="[0].NumberSurface" value="1" type="hidden">

                                                <label for="[0].Height">Высота</label>
                                                <input class="text-box single-line" data-val="true" data-val-number="Значением поля Height должно быть число." id="SHeight" name="[0].Height" value="" type="number">
                                                <span class="field-validation-valid" data-valmsg-for="[0].Height" data-valmsg-replace="true"></span>

                                                <label for="[0].Width">Ширина</label>
                                                <input class="text-box single-line" data-val="true" data-val-number="Значением поля Width должно быть число." name="[0].Width" id="Width" value="" type="number">
                                                <span class="field-validation-valid" data-valmsg-for="[0].Width" data-valmsg-replace="true"></span>

                                                <label for="[0].Space">Площадь</label>
                                                <input selectforspace="" data-val="true" data-val-number="Значением поля Space должно быть число." name="[0].Space" id="SSpace" onchange="CalculationAS()" value="" type="number">
                                                <span class="field-validation-valid" data-valmsg-for="[0].Space" data-valmsg-replace="true"></span>
                                            </div>
                                        </div>
                                    </div>
                                    
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Сохранить" class="btn btn-default" style="margin: 30px"/>
                                    @Html.ActionLink("Выйти без сохранения", "AdvertisingDesign", null, new { @class = "btn btn-default" })
                                </div>
                            </div></div>
}
