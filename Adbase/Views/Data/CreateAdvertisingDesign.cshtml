@using Sciencecom.Models
@model  Sciencecom.Models.AdvertisingStructure
@{
    var i = 0;
    ViewBag.Title = "AdvertisingStructure";
    //Собственник конструкциии
    var owners = new SciencecomEntities().Owners.ToList();
   
    //Вид
    var ListTypeAdvertising = new SciencecomEntities().TypeOfAdvertisingStructures.ToList();
 
    //ListTypeAdvertising.Insert(0,null);

    var ViewBids = new SciencecomEntities().ViewBids.OrderBy(a=>a.OrderBy).ToList();
   
   
    //Элемент улично-дорожной сети
    var ListTypeElementOfTheRoadNetworkName = new SciencecomEntities().TheElementOfTheRoadNetworks.Select(a => new { id = a.id, Value = a.TheElementOfTheRoadNetworkName }).ToList();
    
    //Статус
    var Status = new SciencecomEntities().Status.OrderBy(x=>x.OrderByStatus).Select(a => new { id = a.id, Value = a.NameStatus }).ToList();  
    Status.Insert(0,null); 
    
    //Населенный пункт выпадающий список
    var Locality = new SciencecomEntities().Localities.ToList();

    //Направление стороны
    var DirectionSide = new SciencecomEntities().DirectionSides.OrderBy(x=>x.OrderBY).ToList();
    //Индификация поверхности
    var IdentificationSide = new SciencecomEntities().Identifications.ToList();
    //IdentificationSide.Insert(0, null);
    //Идентификационный номер
    var PropertyLocation = new SciencecomEntities().PropertyLocations.ToList();
   
    //Подсветка
    var Backlight = new SciencecomEntities().Backlights.ToList();
    
}
<script type="text/javascript">
    var i = 0;
    var StartCountForSurface ;
    var EndCountForSurface = 0;
    $(document).ready(function() {


        //выпадающий список на согласование
        $("[name=OnAgreement]").change(function() {
            var selectIndex = $("[name=OnAgreement] option:selected").val();

            if (selectIndex == "true") {
                $("#ContractHide").css("display", "block");
            }
            if (selectIndex == "false") {
                $("#ContractHide").css("display", "none");
            }

        });


    });

    // подсчет суммы площадей
    function CalculationAS() {

        var Summ=0;
        $("[selectforspace]").each(function(indx, element) {
            if ($(element).val() != "") {
                Summ += parseInt($(element).val());
            }
        });
        $("#ConstructionSquare").val(Summ);
    }

//кол-во сторон
    function SetCountSize() {
        EndCountForSurface = 0;
        var CountSizes = $('#CountSizes').val();
        $("#CountSize").val(CountSizes);
        if (CountSizes != "") {
            $("[code]").each(function (indx, element) {
                element.remove();
            });

            for (var i = 1; i <= CountSizes; i++) {

                $("#InsertSide").before("<div code class=\"form-horizontal\" >" +
                    "<div class=\"form-group\" >" +
                    "<h3 class=\"control-label col-md-2\" for=\"\" style=\"margin-left: 55px\">Сторона  " + i + " </h3>" +
                    "</div>" +
                    "<div class=\"form-group\">" +
                    "<div class=\"col-md-10\">" +
                    "<div style=\"float:left\">"+
                    "<b>Количество поверхностей</b>" +
                    " <select  style=\"width:60px\" class=\"text-box single-line form-control input-sm\" id=\"AddButton" + i + "\" onchange=AddSurface(" + i + ") name=\"CountSurfuce" + i + "\" IdentificationForCountSide=\"\" type=\"text\" data-val=\"true\" data-val-required=\"Укажите кол-во сторон\">" +
                    "<option></option>" +
                    "<option>1</option>" +
                    "<option>2</option>" +
                    "<option>3</option>" +
                    "<option>4</option>" +
                    "<option>5</option>" +
                    "<option>6</option>" +
                    "<option>7</option>" +
                    "<option>8</option>" +
                    "</select> </div> &nbsp;&nbsp;&nbsp; <b>Направление стороны</b>" + '@Ajax.JavaScriptStringEncode(Html.DropDownList("DirectionSide", new SelectList(DirectionSide, "id", "NameOfDirectionSide"), "", new { IdentificationForDirectionSide = "IdentificationForDirectionSide" ,@class= "form-control input-sm" }).ToHtmlString().Replace("\"", " "))' +
                    "</div>" +
                    "</div> <div style=\"display: none\" id=\"" + i + "HiddenIdentification\"> &nbsp;&nbsp;&nbsp;<b>Идентификация поверхностей</b>" + '@Ajax.JavaScriptStringEncode(Html.DropDownList("IdentificationSurface", new SelectList(IdentificationSide, "id", "IdentificationName"), "", new { IdentificationForIdentificationSurface = "IdentificationForIdentificationSurface", @class = "form-control input-sm" }).ToHtmlString().Replace("\"", " ")) </div>' +
                    "<div  id=\"InsertPartial" + i + "\"></div>" +
                    "</div>");

                $("#SizeOfCount").val(CountSizes);

            }
        }



    }

    //Добавить поверхность+
    function AddSurface(i) {

        var count = $("#AddButton" + i + "").val();
        StartCountForSurface = EndCountForSurface;
        EndCountForSurface = parseInt(count) + parseInt(EndCountForSurface);

        if (count == 1) {
            $("#" + i + "HiddenIdentification").hide();
        } else {
            $("#" + i + "HiddenIdentification").show();
            //валидация

        }
        $("[side=" + i + "]").remove();


        $.ajax('@Url.Action("AddSurface", "Data")', { data: { side: i, StartCountForSurface: StartCountForSurface, EndCountForSurface: EndCountForSurface } })
            .success(function (e) {
                var live_str = $('<div>', { html: e });

                var res = live_str.find('.body-content');

                $("#InsertPartial" + i + "").prepend(res);
            });

    }



    //выщитывание площади для каждой поверхности
    function CalculationOfTheArea(j) {

        var Height = $('[name="[' + j + '].Height"]').val();
        var Width = $('[name="[' + j + '].Width"]').val();

        if (Height != "" && Width != "") {

            var Sum = Height * Width;

            $('[name="[' + j + '].Space"]').val(Sum);
            CalculationAS();
        }

    }



</script>
<h3> КАРТОЧКА КОНСТРУКЦИИ</h3>

@Scripts.Render("~/Content/Map")
@using (Html.BeginForm("CreateAdvertisingDesign", "Data", FormMethod.Post, new { enctype = "multipart/form-data",id="test1" }))
{
    <input type="hidden" name="Code" value="@ViewBag.Code">
    <h3> Общие данные о конструкции</h3>
    @Html.AntiForgeryToken()
    <div class="form-inline" style="margin-bottom: -10px">
        <hr/>

        <input type="hidden" id="CountSize" id="SizeOfCount" name="CountSize" value="">
        @Html.ValidationSummary(true)
        @Html.ValidationMessage("Error")

        <div class="form-group"  >
            <label for="Owner" >Собственник </label>
            @Html.DropDownListFor(a => a.Owner_Id, new SelectList(owners, "id", "Name"), "",new {@class= "form-control input-sm" })
            @Html.ValidationMessageFor(model => model.Owner_Id)
        </div>

        <div class="form-group" >
            <label for="Locality">Вид</label>
            
            @Html.DropDownListFor(a => a.Code, new SelectList(ListTypeAdvertising, "Code", "Name"), new { @disabled = "disabled", @class= "form-control input-sm" })
            @Html.ValidationMessageFor(model => model.Code)
        </div>

        <div class="form-group" >
            <label for="Status" >Статус</label>
            @Html.DropDownListFor(a => a.Status_Id, new SelectList(Status, "id", "Value", ""), new { @class = "form-control input-sm"})
            @Html.ValidationMessageFor(model => model.Status_Id)
        </div>

        <div class="form-group">
            <label for="UniqueNumber">Идентификационный номер</label>
            <input class="text-box single-line form-control" name="UniqueNumber" data-val="true" data-val-required="Введите значение " type="text" value="@ViewBag.UniqueNumber">
            @Html.ValidationMessageFor(model => model.UniqueNumber)
        </div>
        <br>

    </div>

    <div class="form-inline">
        <div class="form-group">
            <label for="PropertyLocation_id" style = "display:none;">Форма собственности места размещения </label>
            @Html.DropDownListFor(a => a.PropertyLocation_id, new SelectList(PropertyLocation, "id", "NamePropertyLocation"), "", new {style = "display:none;",@class="form-control"})
            @Html.ValidationMessageFor(model => model.PropertyLocation_id)
        </div>

        <div class="form-group">
            <label for="Owner"  style = "display:none;">Собственник места размещения</label>
            @Html.EditorFor(model => model.OwnerPlacements, new {htmlattributes = new { style = "display:none;",@class = "form-control" } })
            @Html.ValidationMessageFor(model => model.OwnerPlacements)
        </div>

    </div>
        <h3> Данные о месте расположения конструкции</h3>

        <div class="form-inline">
            <hr />
            <div class="form-group" >
                <label for="Locality">Нас. пункт</label>
                @Html.DropDownListFor(a => a.Locality_id, new SelectList(Locality, "id", "NameLocality", "dbfd4d94-48be-4136-b900-74bc2c5c04aa"),new { @class = "form-control input-sm"})
                @Html.ValidationMessageFor(model => model.Locality_id)
            </div>
           
            <div class="form-group">
            <label for="Street1">Улица</label>
            @Html.TextBoxFor(model => model.Street1, new {@class = "form-control"})
            @Html.ValidationMessageFor(model => model.Street1)
        </div>

        </div>
    <input type="button" id="MapSearchStreet" value="Поиск на карте" style="margin-left: 185px; margin-top: 15px; margin-bottom:15px" class ="btn">
    
    <div class="form-inline">
        <div class="form-group">
            <label for="Street2">Ближайшая улица по ходу движения</label>
            @Html.EditorFor(model => model.Street2, new { htmlattributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Street2)
        </div>

        <div class="form-group">
            <label for="FromStreet">Со стороны улицы</label>
            @Html.EditorFor(model => model.FromStreet, new { htmlattributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FromStreet)
        </div>
    </div>
    
    <div class="form-inline" style="margin-top: 20px">

        <div class="form-group" >
            <label for="TheElementOfTheRoadNetwork">Элемент улично-дорожной сети</label>
            @Html.DropDownListFor(a => a.TheElementOfTheRoadNetwork_id, new SelectList(ListTypeElementOfTheRoadNetworkName, "id", "Value"), "",new { @class = "form-control input-sm" })
            @Html.ValidationMessageFor(a => a.TheElementOfTheRoadNetwork_id)
        </div>

   </div>
        <div class="form-inline">
            <hr />
            <div class="form-group" style="width: 600px; height: 500px" id="map"></div>

            <div class="form-group">

                <div>
                    <label for="Breadth">Широта </label>
                    <input class="text-box single-line ui-autocomplete-input form-control" data-val="true"  type="text" name="Breadth" id="Breadth">
                    <span  data-valmsg-for="Breadth" data-valmsg-replace="true"></span>

                </div>

                <div>
                    <label for="Height">Долгота</label>
                    <input type="text" class="form-control" name="Height" data-val="true"  id="Height">

                    @Html.ValidationMessageFor(model => model.Height)

                </div>
            </div>
        </div>

        <h3> Разрешительная документация</h3>
    <div class="form-horizontal">
        <hr/>
        <div class="form-group">

            <label for="ViewBad_Id" style="display: none;">Вид заявки</label>
            @Html.DropDownListFor(model => model.ViewBad_Id, new SelectList(ViewBids, "id", "Name"), "", new {style = "display:none;", @class = "form-control"})
            @Html.ValidationMessageFor(model => model.ViewBad_Id)


            <label for="DateOfReceiptOfTheApplication" style="display: none;">Дата подачи заявки</label>
            @Html.EditorFor(model => model.DateOfReceiptOfTheApplication, new {htmlattributes = new {style = "display:none;", @class = "form-control"}})
            @Html.ValidationMessageFor(model => model.DateOfReceiptOfTheApplication)

        </div>
        <div class="form-group" style="margin-bottom: 5px; margin-left: 5px">

            <label for="C_PassportAdvertising">№ паспорта рекламы</label>
            @Html.EditorFor(model => model.C_PassportAdvertising, new {htmlattributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.C_PassportAdvertising)


            <label for="DateOfTakenPassport">Дата выдачи паспорта</label>
            @Html.EditorFor(model => model.DateOfTakenPassport, new {htmlattributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.DateOfTakenPassport)

        </div>

        <div class="form-group" style="margin-bottom: 5px; margin-left: 5px">
            <label for="StartDate">разреш с</label>
            @Html.EditorFor(model => model.StartDate, new {htmlattributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.StartDate)

            <label for="EndDate">разреш по</label>
            @Html.EditorFor(model => model.EndDate, new {htmlattributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.EndDate)
        </div>

    </div>

        <div class="row" style="margin-top: 15px">
        <div class="col-md-4">
            <label for="ScanPassport_1Sides">Скан паспорта (стор 1)</label>
        </div>
        <div class="col-md-4">
            <label for="ScanPassport_2Sides">Скан паспорта (стор 2)</label>
        </div>
    </div>

    <div class="col-md-4">
        
        <img class="closeimg" style="width: 20px" src="../../Content/CloseImg.jpg"/>
        <div class="fileUpload btn btn-default input-sm">
            <span accept="image/jpeg/">&nbsp;Стор. 1&nbsp;</span>
            <input type="file" class="upload" name="ScanPassport_1Sides" accept="image/jpeg/"/>
        </div>
        <label for="ScanPassport_1Sides">Файл не выбран</label>
        <br/>
        <br/>

    </div>
        <div class="col-md-4">
            <img class="closeimg" style="width:20px" src="../../Content/CloseImg.jpg" />
            <div class="fileUpload btn btn-default input-sm">
                        <span accept="image/jpeg/">&nbsp;Стор. 2&nbsp;</span>
                        <input type="file" class="upload" name="ScanPassport_2Sides" accept="image/jpeg/"/>
                    </div>
                    <label for="ScanPassport_2Sides">Файл не выбран</label>
                    <br/>
                    <br/>
                    
        </div>

        <div class="form-horizontal">

            <div class="form-group" style="margin-bottom: 5px">
                <label for="C_ContractFinancialManagement" style="display: none">№ договора с финансовым управлением</label>
              

                <label for="TheDateOfTheContract" style="display: none">Дата договора</label>
       

            </div>

            <div class="form-group">

                <label for="Scan1SidesWithFinancialManagement" style="display: none">Скан 1 страницы договора с финанаосвым управлением</label>
                <input type="file"  name="Scan1SidesWithFinancialManagement" style="display: none" accept="image/jpeg" /><br />
                <span class="field-validation-valid" data-valmsg-for="Scan1SidesWithFinancialManagement" data-valmsg-replace="true" style="display: none"></span>
                @*@Html.Raw("Не более 1 МБ")*@

            </div>
        </div>

        <h3> Описание конструкции</h3>

        <div class="form-inline">
            <hr />
            <div class="form-group">
                <label for="PlannedInstallationDate" style ="display: none;">Планируемая дата установки</label>
                @Html.EditorFor(model => model.PlannedInstallationDate, new { htmlattributes = new { style = "display:none;" }})
                @Html.ValidationMessageFor(model => model.PlannedInstallationDate)
            </div>

            <div class="form-group">
                <label for="DateOfActualInstallation" style ="display: none;">Дата фактической установки</label>
                @Html.EditorFor(model => model.DateOfActualInstallation, new { htmlattributes = new { style = "display:none;" } })
                @Html.ValidationMessageFor(model => model.DateOfActualInstallation)
            </div>



        </div>
        <div class="form-horizontal">
            <div class="form-group">
                <label for="DateDismantling" style ="display: none;">Дата демонтажа</label>
                @Html.EditorFor(model => model.DateDismantling, new { htmlattributes = new { style = "display:none;" } })
                @Html.ValidationMessageFor(model => model.DateDismantling)
            </div>
        </div>
        <div class="form-inline">

            <div class="form-group">
                <label for="CommentOwner">Подсветка</label>
                @Html.DropDownListFor(a => a.Backlight_Id, new SelectList(Backlight, "id", "Name"),"",new {@class= "form-control input-sm" })
                @Html.ValidationMessageFor(model => model.Backlight_Id)
            </div>

            <div class="form-group">
                <label for="CommentOwner">Комментарий</label>
                @Html.EditorFor(model => model.CommentOwner, new { htmlattributes = new { @class = "form-control" } })
            </div>

        </div>
        <div class="form-horizontal" style="margin-top: 18px;margin-left:15px">
            <div class="form-group">
                <label for="ConstructionSquare">Площадь конструкции</label>
                <input id="ConstructionSquare" class="form-control" readonly name="ConstructionSquare"  style="background-color: lightgray" type="text" value="">
             </div>
            <div class="form-group">
                <label for="CountSizes">Количество сторон</label>
                <select class="form-control input-sm" style="width: 60px" id="CountSizes" onchange="SetCountSize()" name="CountSizes" type="text" data-val="true">
                    <option></option>
                    <option>1</option>
                    <option>2</option>
                    <option>3</option>
                    <option>4</option>
                    <option>5</option>
                    <option>6</option>
                    <option>7</option>
                    <option>8</option>
                </select>
                <span class="field-validation-validr" data-valmsg-for="CountSizes" data-valmsg-replace="true">
                </span>
            </div>
        </div>
        <div id="InsertSide"></div>

        <div class="form-group" style="margin-top: 15px;">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Сохранить" class="btn btn-default form-control"/>
                @Html.ActionLink("Выйти без сохранения", "AdvertisingDesign", null, new { @class = "btn btn-default" })
            </div>
        </div>
}
