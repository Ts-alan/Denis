
@using Microsoft.AspNet.Identity
@using Microsoft.AspNet.Identity.EntityFramework
@using Newtonsoft.Json
@using Sciencecom.Models
@model  Sciencecom.Models.AdvertisingStructure
@{
    ViewBag.Title = "CreateBilboard";
    SelectList owners = new SelectList(new SciencecomEntities().Owners.Select(m=>m.Name).ToList());
    Guid IdGuid = new Guid();
    
}
<script type="text/javascript">
    $(document).ready(function() {
        var i=0;
        //выпадающий список
        $("#SideIndex").change(function() {
            var selectIndex = document.getElementById("SideIndex").selectedIndex;
            if (selectIndex == 0) {
                $("#SizeB").css("display", "none");
                $("#SizeC").css("display", "none");
                $("#SizeD").css("display", "none");
                $("#SizeE").css("display", "none");
                $("#CountSize").val("1");
            }
            if (selectIndex == 1) {
                $("#SizeB").css("display", "block");
                $("#SizeC").css("display", "none");
                $("#SizeD").css("display", "none");
                $("#SizeE").css("display", "none");
                $("#CountSize").val("2");
            }
            if (selectIndex == 2) {
                $("#SizeB").css("display", "block");
                $("#SizeC").css("display", "block");
                $("#SizeD").css("display", "none");
                $("#SizeE").css("display", "none");
                $("#CountSize").val("3");
            }
            if (selectIndex == 3) {
                $("#SizeB").css("display", "block");
                $("#SizeC").css("display", "block");
                $("#SizeD").css("display", "block");
                $("#SizeE").css("display", "none");
                $("#CountSize").val("4");
            }
            if (selectIndex == 4) {
                $("#SizeB").css("display", "block");
                $("#SizeC").css("display", "block");
                $("#SizeD").css("display", "block");
                $("#SizeE").css("display", "block");
                $("#CountSize").val("5");
            }
        });
       //выпадающий список на согласование
        $("[name=OnAgreement]").change(function () {
            var selectIndex = $("[name=OnAgreement] option:selected").val();
            console.log(selectIndex);
            if (selectIndex == "true") {
                $("#ContractHide").css("display", "block");
            }
            if (selectIndex == "false") {
                $("#ContractHide").css("display", "none");
            }

        });
        function InsertOn() {
            $(".each1 input").eq(0).on('change', function () {
                var temp1 = $(this).val();
                //вычисление площади
                var temp2 = $(".each2 input").val();
                $(".each3 input").val(temp1*(temp2===""?0:temp2));

                $(".each1 input").each(function() {
                    $(this).val(temp1);
                });
            });
            $(".each2 input").eq(0).on('change', function () {
                var temp1 = $(this).val();
                //вычисление площади
                var temp2 = $(".each1 input").val();
                $(".each3 input").val(temp1 * (temp2 === "" ? 0 : temp2));

                $(".each2 input").each(function () {
                    $(this).val(temp1);
                });
            });
            $(".each3 input").eq(0).on('change', function () {
                var temp1 = $(this).val();
                $(".each3 input").each(function () {
                    $(this).val(temp1);
                });
            });
        }

        function Increment() {
            return i++;
        }
        //скрипт для добавить площадь
        $("#AddButton1").click(function () {
            var tempIncrement = Increment();
            $.get('@Url.Action("PartialBilboard","Data")', { param: tempIncrement, side: "А" }).success(function (e) {
                $("#InsertPartial1").before(e);
                InsertOn();
                if (tempIncrement != 0) {
                    duplicationSurfaces();
                }
            });
        });

        $("#AddButton2").click(function () {
            var tempIncrement = Increment();
            $.get('@Url.Action("PartialBilboard","Data")', { param: tempIncrement, side: "B" }).success(function (e) {
                $("#InsertPartial2").before(e);
                InsertOn();
                duplicationSurfaces();
            });
        });

        $("#AddButton3").click(function () {
            var tempIncrement = Increment();
            $.get('@Url.Action("PartialBilboard","Data")', { param: tempIncrement, side: "C" }).success(function (e) {
                $("#InsertPartial3").before(e);
                InsertOn();
                duplicationSurfaces();
            });
        });

        $("#AddButton4").click(function () {
            var tempIncrement = Increment();
            $.get('@Url.Action("PartialBilboard","Data")', { param: tempIncrement, side: "D" }).success(function (e) {
                $("#InsertPartial4").before(e);
                InsertOn();
                duplicationSurfaces();
            });
        });

        $("#AddButton5").click(function () {
            var tempIncrement = Increment();
            $.get('@Url.Action("PartialBilboard","Data")', { param: tempIncrement, side: "E" }).success(function (e) {
                $("#InsertPartial5").before(e);
                InsertOn();
                duplicationSurfaces();
            });
        });
        //дублирование для остальных поверхностей при добавлении
        function duplicationSurfaces() {
            $(".each1 input").trigger('change');
            $(".each2 input").trigger('change');
            $(".each3 input").trigger('change');
        }
        });

</script>
<h3> ДОБАВИТЬ РЕКЛАМНУЮ КОНСТРУКЦИЮ</h3>

@Scripts.Render("~/Content/Map")
@using (Html.BeginForm("CreateAdvertisingDesign", "Data", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <h3> 1. Общие данные о рекламной конструкции</h3>
    @Html.AntiForgeryToken()
    <div class="form-inline">
        <hr/>
        <input type="hidden" id="CountSize" name="CountSize" value="">
        @Html.ValidationSummary(true)
        @Html.ValidationMessage("Error")

        <div class="form-group">
            <label for="Owner">Собственник</label>
            @Html.DropDownList("Owner", owners)
        </div>

        <div class="form-group">
            <label for="Locality">Вид</label>
            @Html.Editor("Билборд")
            @*@Html.EditorFor(model => model.Sides.Single(a => a.Id == ViewBag.Code).Name)*@
            @*@Html.ValidationMessageFor(model => model.Sides.Single(a => a.Id == ViewBag.Code).Name)*@
        </div>

        <div class="form-group">
            <label for="Status">Статус</label>
            @Html.DropDownList("Status", new SelectList(new[] {"На согласовании", "Согласовано", "Существующий", "Демонтировано"}))
            @Html.ValidationMessageFor(model => model.Status)
        </div>

        <div class="form-group">
            <label for="UniqueNumber">Уникальный номер</label>
            @Html.EditorFor(model => model.UniqueNumber)
            @Html.ValidationMessageFor(model => model.UniqueNumber)
        </div>

    </div>

    <h3> 2.Данные о месте расположения рекламной конструкции</h3>

    <div class="form-inline">
        <hr/>
        <div class="form-group">
            <label for="Locality">Нас. пункт</label>
            @Html.EditorFor(model => model.Locality)
            @Html.ValidationMessageFor(model => model.Locality)
        </div>


        <div class="form-group" style="margin-left: 200px">
            <label for="TheElementOfTheRoadNetwork">Элемент улично-дорожной сети</label>
            @Html.DropDownList("TheElementOfTheRoadNetwork", new SelectList(new[] {"Перекресток ", "Прегон", "Центр перекрестка"}))
            @*@Html.ValidationMessageFor(model => model.TheElementOfTheRoadNetwork)*@
        </div>
    </div>
    
    <div class="form-inline">
        
        <div class="form-group">
            <label for="Street1">Улица 1</label>
                @Html.EditorFor(model => model.Street1)
                @Html.ValidationMessageFor(model => model.Street1)
        </div>

        <div class="form-group">
            <label for="House1">Дом</label>
            @Html.EditorFor(model => model.House1)
            @Html.ValidationMessageFor(model => model.House1)
        </div>

        <div class="form-group">
            <label for="Street2">Улица 2</label>
            @Html.EditorFor(model => model.Street2)
            @Html.ValidationMessageFor(model => model.Street2)
        </div>

        <div class="form-group">
            <label for="FromStreet">Со стороны улицы 3</label>
            @Html.EditorFor(model => model.FromStreet)
            @Html.ValidationMessageFor(model => model.FromStreet)
        </div>
    </div>

    <div class="form-inline">
        
               <div class="form-group" style="width: 600px; height: 500px" id="map"></div>
           
                <div class="form-group" >
                    <label for="Breadth">Широта</label>
                    @Html.EditorFor(model => model.Breadth)
                    @Html.ValidationMessageFor(model => model.Breadth)
                    <label for="Height">Долгота</label>
                    @Html.EditorFor(model => model.Height)
                    @Html.ValidationMessageFor(model => model.Height)
                </div>

                <div class="form-group">


                </div>
   </div>

    <div class="form-horizontal">

        <div class="form-group">
            <label for="C_ContractFinancialManagement">№ договора с финансовым управлением</label>
            @Html.EditorFor(model => model.C_ContractFinancialManagement)
            @Html.ValidationMessageFor(model => model.C_ContractFinancialManagement)
        </div>

        <div class="form-group">
            <label for="C_PassportAdvertising">№ паспорта рекламы</label>
            @Html.EditorFor(model => model.C_PassportAdvertising)
            @Html.ValidationMessageFor(model => model.C_PassportAdvertising)

            <label for="StartDate">разреш с</label>
            @Html.EditorFor(model => model.StartDate)
            @Html.ValidationMessageFor(model => model.StartDate)

            <label for="EndDate">разреш по</label>
            @Html.EditorFor(model => model.EndDate)
            @Html.ValidationMessageFor(model => model.EndDate)
        </div>



        <div class="form-group">
            <label for="FromStreet">Со стороны улицы 3</label>
            @Html.EditorFor(model => model.FromStreet)
            @Html.ValidationMessageFor(model => model.FromStreet)
        </div>
    </div>
        <div class="form-group">
            @Html.Label("На согласовании", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select name="OnAgreement" class="text-box single-line valid" data-val="true" data-val-required="Выбирите значение">
                    <option></option>
                    <option value="true">Да</option>
                    <option value="false">Нет</option>
                </select>
                <span class="field-validation-valid" data-valmsg-for="OnAgreement" data-valmsg-replace="true" style="display: block;float: left"></span>
            </div>
        </div>

        @*разрешен с-до*@
        <div class="form-group">
            @Html.Label("Разрешен с ", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="date" name="StartDate" class="text-box single-line valid" data-val="true" data-val-required="Выбирите значение">
                <span class="field-validation-valid" data-valmsg-for="StartDate" data-valmsg-replace="true" style="display: block"></span>
            </div>
        </div>
        <div class="form-group">
            @Html.Label("до", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="date" name="EndDate" class="text-box single-line valid" data-val="true" data-val-required="Выбирите значение">
                <span class="field-validation-valid" data-valmsg-for="EndDate" data-valmsg-replace="true" style="display: block"></span>
            </div>
        </div>
        @*Количество сторон*@
        <div class="form-group">
            @Html.Label("Количество сторон", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TypeOfAdvertising", new SelectList(new[] { "1", "2", "3", "4", "5" }), new { id = "SideIndex" })
            </div>
        </div>
        @Html.ValidationMessage("Photo")
        <div class="form-group">
            @Html.Label("Паспорт", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="passport" accept="image/jpeg" data-val-required="Выберите файл для загрузки" /><br />
                @Html.Raw("Не более 1 МБ")
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Фото", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="photo" accept="image/jpeg" data-val-required="Выберите файл для загрузки" /><br />
                @Html.Raw("Не более 1 МБ")
            </div>
        </div>
        @*Сторона А*@
        <div class="form-group">
            <div class="form-group">
                @Html.Label("Сторона А", new { @class = "control-label col-md-2", style = "margin-left: 55px" })
            </div>
            @*Добавить площадь*@
            <div class="form-group">
                <div class="col-md-10">
                    <a href="#" id="AddButton1" style="color: #428bca; font-weight: bold;">+Добавить площадь</a>
                </div>
            </div>
            <div id="InsertPartial1"></div>
        </div>

        @*Сторона Б*@
        <div class="form-group" id="SizeB" style="display: none">
            <div class="form-group">
                @Html.Label("Сторона Б", new { @class = "control-label col-md-2", style = "margin-left:45px" })
            </div>
            @*Добавить площадь*@
            <div class="form-group">
                <div class="col-md-10">
                    <a href="#" id="AddButton2" style="color: #428bca; font-weight: bold;">+Добавить площадь</a>
                </div>
            </div>
            <div id="InsertPartial2"></div>
        </div>

        @*Сторона C*@
        <div class="form-group" id="SizeC" style="display: none">
            <div class="form-group">
                @Html.Label("Сторона C", new { @class = "control-label col-md-2", style = "margin-left:45px" })
            </div>

            @*Добавить площадь*@
            <div class="form-group">
                <div class="col-md-10">
                    <a href="#" id="AddButton3" style="color: #428bca; font-weight: bold;">+Добавить площадь</a>
                </div>
            </div>
            <div id="InsertPartial3"></div>
        </div>

        @*Сторона D*@
        <div class="form-group" id="SizeD" style="display: none">
            <div class="form-group">
                @Html.Label("Сторона D", new { @class = "control-label col-md-2", style = "margin-left:45px" })
            </div>
            @*Добавить площадь*@
            <div class="form-group">
                <div class="col-md-10">
                    <a href="#" id="AddButton4" style="color: #428bca; font-weight: bold;">+Добавить площадь</a>
                </div>
            </div>
            <div id="InsertPartial4"></div>
        </div>


        @*Сторона E*@
        <div class="form-group" id="SizeE" style="display: none">
            <div class="form-group">
                @Html.Label("Сторона E", new { @class = "control-label col-md-2", style = "margin-left:45px" })
            </div>
            @*Добавить площадь*@
            <div class="form-group">
                <div class="col-md-10">
                    <a href="#" id="AddButton5" style="color: #428bca; font-weight: bold;">+Добавить площадь</a>
                </div>
            </div>
            <div id="InsertPartial5"></div>
        </div>

       
    

        <div class="form-group">
            <label class="control-label col-md-2" for="Shirota">Широта</label>
            <div class="col-md-10">
                <input type="text" id="Shirota" name="Height" required />
                @*@Html.ValidationMessageFor(model => model.Height)*@
                @*<span class="field-validation-valid" data-valmsg-for="Shirota" data-valmsg-replace="true"></span>*@
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="Dolgota">Долгота</label>
            <div class="col-md-10">
                <input type="text" id="Dolgota" name="Breadth" required />
                @*@Html.ValidationMessageFor(model => model.Breadth)*@
                @*<span class="field-validation-valid" data-valmsg-for="Dolgota" data-valmsg-replace="true"></span>*@
            </div>
        </div>
        <input type="button" value="Задать координаты" onclick="SetCoordinates()" />
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Добавить" class="btn btn-default" />
            </div>
        </div>





        }
