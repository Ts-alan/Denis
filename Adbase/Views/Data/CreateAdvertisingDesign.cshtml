@using Microsoft.AspNet.Identity
@using Microsoft.AspNet.Identity.EntityFramework
@using Newtonsoft.Json
@using Sciencecom.Models
@model  Sciencecom.Models.AdvertisingStructure
@{
    ViewBag.Title = "CreateBilboard";
    SelectList owners = new SelectList(new SciencecomEntities().Owners.Select(m => m.Name).ToList());
    Guid IdGuid = new Guid();
    

}
<script type="text/javascript">
    $(document).ready(function() {
        var i = 0;

        //выпадающий список на согласование
        $("[name=OnAgreement]").change(function() {
            var selectIndex = $("[name=OnAgreement] option:selected").val();
            console.log(selectIndex);
            if (selectIndex == "true") {
                $("#ContractHide").css("display", "block");
            }
            if (selectIndex == "false") {
                $("#ContractHide").css("display", "none");
            }

        });

        function InsertOn() {
            $(".each1 input").eq(0).on('change', function() {
                var temp1 = $(this).val();
                //вычисление площади
                var temp2 = $(".each2 input").val();
                $(".each3 input").val(temp1 * (temp2 === "" ? 0 : temp2));

                $(".each1 input").each(function() {
                    $(this).val(temp1);
                });
            });
            $(".each2 input").eq(0).on('change', function() {
                var temp1 = $(this).val();
                //вычисление площади
                var temp2 = $(".each1 input").val();
                $(".each3 input").val(temp1 * (temp2 === "" ? 0 : temp2));

                $(".each2 input").each(function() {
                    $(this).val(temp1);
                });
            });
            $(".each3 input").eq(0).on('change', function() {
                var temp1 = $(this).val();
                $(".each3 input").each(function() {
                    $(this).val(temp1);
                });
            });
        }

        function Increment() {
            return i++;
        }

//скрипт для добавить площадь


//дублирование для остальных поверхностей при добавлении
        function duplicationSurfaces() {
            $(".each1 input").trigger('change');
            $(".each2 input").trigger('change');
            $(".each3 input").trigger('change');
        }

        //кол-во сторон
    });

    function SetCountSize() {
        var CountSizes = $('#CountSizes').val();
        if (CountSizes != "") {
            $("[code]").each(function(indx, element) {
                element.remove();
            });
            for (var i = 1; i <= CountSizes; i++) {

                $("#InsertSide").before("<div class=\"form-horizontal\" code>" +
                    "<div class=\"form-group\">" +
                    "<label class=\"control-label col-md-2\" for=\"\" style=\"margin-left: 55px\">Сторона  " + i + " </label>" +
                    "</div>" +
                    "<div class=\"form-group\">" +
                    "<div class=\"col-md-10\">" +
                    "<a href=\"#\" id=\"AddButton" + i + "\" onclick=AddSurface(" + i + ") style=\"color: #428bca; font-weight: bold;\">+Добавить площадь</a>" +
                    "</div>" +
                    "</div>" +
                    "<div id=\"InsertPartial" + i + "\"></div>" +
                    "</div>");
            }
        }
    }

    function AddSurface(i) {
        $.get('@Url.Action("Surface", "Data")', { side: i }).success(function (e) {
            $("#InsertPartial"+i+"").before(e);
          
            //if (tempIncrement != 0) {
            //    duplicationSurfaces();
            //}
        });
    }
   
</script>
<h3> ДОБАВИТЬ РЕКЛАМНУЮ КОНСТРУКЦИЮ</h3>

@Scripts.Render("~/Content/Map")
@using (Html.BeginForm("CreateAdvertisingDesign", "Data", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <input type="hidden" name="Code" value="@ViewBag.Code">
    <h3> 1. Общие данные о рекламной конструкции</h3>
    @Html.AntiForgeryToken()
    <div class="form-inline">
        <hr/>

        <input type="hidden" id="CountSize" name="CountSize" value="">
        @Html.ValidationSummary(true)
        @Html.ValidationMessage("Error")

        <div class="form-group">
            <label for="Owner">Собственник</label>
            @Html.DropDownList("Owner", owners)
        </div>

        <div class="form-group">
            <label for="Locality">Вид</label>
            @*@Html.Editor("Билборд")*@
            @*@Html.EditorFor(model => model.Owner.Telephone)*@
            @*@Html.ValidationMessageFor(model => model.Sides.Single(a => a.Id == ViewBag.Code).Name)*@
        </div>

        <div class="form-group">
            <label for="Status">Статус</label>
            @Html.DropDownList("Status", new SelectList(new[] { "На согласовании", "Согласовано", "Существующий", "Демонтировано" }))
            @Html.ValidationMessageFor(model => model.Status)
        </div>

        <div class="form-group">
            <label for="UniqueNumber">Уникальный номер</label>
            @Html.EditorFor(model => model.UniqueNumber)
            @Html.ValidationMessageFor(model => model.UniqueNumber)
        </div>

    </div>

    <h3> 2.Данные о месте расположения рекламной конструкции</h3>

    <div class="form-inline">
        <hr />
        <div class="form-group">
            <label for="Locality">Нас. пункт</label>
            @Html.EditorFor(model => model.Locality)
            @Html.ValidationMessageFor(model => model.Locality)
        </div>


        <div class="form-group" style="margin-left: 200px">
            <label for="TheElementOfTheRoadNetwork">Элемент улично-дорожной сети</label>
            @Html.DropDownList("TheElementOfTheRoadNetwork", new SelectList(new[] { "Перекресток ", "Прегон", "Центр перекрестка" }))
        </div>
    </div>

    <div class="form-inline">
        <hr />
        <div class="form-group">
            <label for="Street1">Улица 1</label>
            @Html.EditorFor(model => model.Street1)
            @Html.ValidationMessageFor(model => model.Street1)
        </div>

        <div class="form-group">
            <label for="House1">Дом</label>
            @Html.EditorFor(model => model.House1)
            @Html.ValidationMessageFor(model => model.House1)
        </div>

        <div class="form-group">
            <label for="Street2">Улица 2</label>
            @Html.EditorFor(model => model.Street2)
            @Html.ValidationMessageFor(model => model.Street2)
        </div>

        <div class="form-group">
            <label for="FromStreet">Со стороны улицы 3</label>
            @Html.EditorFor(model => model.FromStreet)
            @Html.ValidationMessageFor(model => model.FromStreet)
        </div>
    </div>

    <div class="form-inline">
        <hr />
        <div class="form-group" style="width: 600px; height: 500px" id="map"></div>

        <div class="form-group">
            
            <div>
                <label for="Breadth">Широта </label>
                @Html.EditorFor(model => model.Breadth)
                @Html.ValidationMessageFor(model => model.Breadth)
            </div>

            <div>
                <label for="Height">Долгота</label>
                @Html.EditorFor(model => model.Height)
                @Html.ValidationMessageFor(model => model.Height)
            
            </div>
        </div>
    </div>

    <h3> 3.Разрешительная документация</h3>

    <div class="form-horizontal">
        <hr/>

        <div class="form-group">
            <label for="C_ContractFinancialManagement">№ договора с финансовым управлением</label>
            @Html.EditorFor(model => model.C_ContractFinancialManagement)
            @Html.ValidationMessageFor(model => model.C_ContractFinancialManagement)
        </div>

        <div class="form-group">
            <label for="C_PassportAdvertising">№ паспорта рекламы</label>
            @Html.EditorFor(model => model.C_PassportAdvertising)
            @Html.ValidationMessageFor(model => model.C_PassportAdvertising)

            <label for="StartDate">разреш с</label>
            @Html.EditorFor(model => model.StartDate)
            @Html.ValidationMessageFor(model => model.StartDate)

            <label for="EndDate">разреш по</label>
            @Html.EditorFor(model => model.EndDate)
            @Html.ValidationMessageFor(model => model.EndDate)
        </div>

        <div class="form-group">
            <label for="PlannedInstallationDate">Планируемая дата установки</label>
            @Html.EditorFor(model => model.PlannedInstallationDate)
            @Html.ValidationMessageFor(model => model.PlannedInstallationDate)
        </div>

    </div>

    <div class="form-inline">

        <div class="form-group">
            <label for="ScanPassport_1Sides">Скан паспорта (стор 1)</label>
            <input type="file" name="ScanPassport_1Sides" accept="image/jpeg" data-val-required="Выберите файл для загрузки"/><br/>
            @Html.Raw("Не более 1 МБ")
        </div>

        <div class="form-group">
            <label for="ScanPassport_2Sides">Скан паспорта (стор 2)</label>
            <input type="file" name="ScanPassport_2Sides" accept="image/jpeg" data-val-required="Выберите файл для загрузки" /><br/>
            @Html.Raw("Не более 1 МБ")
        </div>

    </div>

    <div class="form-inline">

        <div class="form-group">
            <label for="DateOfReceiptOfTheApplication">Дата получения заявки</label>
            @Html.EditorFor(model => model.DateOfReceiptOfTheApplication)
            @Html.ValidationMessageFor(model => model.DateOfReceiptOfTheApplication)
        </div>

        <div class="form-group">
            <label for="DateOfTakenPassport">Дата выдачи паспорта</label>
            @Html.EditorFor(model => model.DateOfTakenPassport)
            @Html.ValidationMessageFor(model => model.DateOfTakenPassport)
        </div>

    </div>

    <h3> 4.Описание рекламной конструкции</h3>

    <div class="form-inline">
        <hr/>

        <div class="form-group">
            <label for="DateOfActualInstallation">Дата фактической установки</label>
            @Html.EditorFor(model => model.DateOfActualInstallation)
            @Html.ValidationMessageFor(model => model.DateOfActualInstallation)
        </div>

        <div class="form-group">
            <label for="DateDismantling">Дата демонтажа</label>
            @Html.EditorFor(model => model.DateDismantling)
            @Html.ValidationMessageFor(model => model.DateDismantling)
        </div>

    </div>

    <div class="form-horizontal">
        <div class="form-group">
            <label for="CountSizes">Количество сторон</label>
            <input class="text-box single-line" id="CountSizes" name="CountSizes"  type="text" data-val="true" data-val-required="Укажите кол-во сторон" />
            <span class="field-validation-validr" data-valmsg-for="CountSizes" data-valmsg-replace="true">
            </span>
            <input type="button" value="Задать количество сторон" onclick="SetCountSize()" />
        </div>
    </div>
      <div id="InsertSide"></div>
    <h3>5.Данные контроля</h3>

    <div class="form-inline">

        <div class="form-group">
            <label for="RevisionDate">Дата проверки</label>
            @Html.EditorFor(model => model.RevisionDate)
            @Html.ValidationMessageFor(model => model.RevisionDate)
        </div>

        <div class="form-group">
            <label for="DateDismantling">Комментарий контроллера</label>
            @Html.EditorFor(model => model.Note_controller)
            @Html.ValidationMessageFor(model => model.Note_controller)
        </div>

    </div>

    <div class="form-horizontal">
        <div class="form-group">
            <label for="PhotoController">Фотография</label>
            <input type="file" name="PhotoController" accept="image/jpeg" data-val-required="Выберите файл для загрузки"/><br/>
            @Html.Raw("Не более 1 МБ")
        </div>
    </div>
    
 @*<div class="form-group">
            <div class="form-group">
                @Html.Label("Сторона А", new { @class = "control-label col-md-2", style = "margin-left: 55px" })
            </div>
           
            <div class="form-group">
                <div class="col-md-10">
                    <a href="#" id="AddButton1" style="color: #428bca; font-weight: bold;">+Добавить площадь</a>
                </div>
            </div>
            <div id="InsertPartial1"></div>
        </div>

      
        <input type="button" value="Задать координаты" onclick="SetCoordinates()" />*@
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Добавить" class="btn btn-default" />
            </div>
        </div>





        }
