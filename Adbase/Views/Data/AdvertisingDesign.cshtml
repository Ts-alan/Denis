@using Microsoft.AspNet.Identity
@using Microsoft.AspNet.Identity.EntityFramework
@using Newtonsoft.Json
@using Sciencecom.Models
@model  System.Data.Entity.DbSet<AdvertisingStructure>
@{
    ViewBag.Title = "Advertisign";
    Layout = "~/Views/Shared/_Layout.cshtml";
    AjaxOptions ajax = new AjaxOptions
    {
        UpdateTargetId = "billboardsTable"
    };
    var um = new UserManager<ApplicationUser>(new UserStore<ApplicationUser>(new ApplicationDbContext()));
    ApplicationUser user = um.FindByName(User.Identity.GetUserName());
    string role = user.Roles.Select(m => m.Role.Name).First();
}


@Scripts.Render("~/bundles/jqCrid")
@Scripts.Render("~/bundles/tooltip")
<script type="text/javascript">
    var $SaveIdForHideTooltip;
    var $Tablebacklight;
    var Showonthemap = @Html.Raw(JsonConvert.SerializeObject(Model.Select(a => a.Id_show), Formatting.Indented, new JsonSerializerSettings
                       {ReferenceLoopHandling = ReferenceLoopHandling.Ignore}));

    $(document).ready(function()
    {
        //$(document).on("click", function() {
        //    $(".HideClass")
        //});

        $(document).dblclick(function(e)
        {
            //накручивание индекса к пути удалить
            //$('[href="/Data/DeleteAdvertisingDesign"]').
            //    attr("href","/Data/DeleteAdvertisingDesign/"+(Showonthemap[($(e.target).closest("tr").attr("id")-1)])+"") ;
            //alert(document.activeElement.getAttribute("class"));
            if (document.activeElement.getAttribute("class") != "HideClass")
            {
                var ssd = $(".HideClass");
                if (ssd.length > 0)
                {
                    // $('.tr.ui-widget-content.jqgrow.ui-row-ltr').data('tooltipsy').hide();
                    $('div[id^="tooltipsy"]').hide();
                }
            }
            //    $SaveIdForHideTooltip = document.activeElement.getAttribute("id")-1;
            //}
        });

        //$(document).click(function () {
        //var info = document.activeElement;
        // alert(document.activeElement.getAttribute("class"));
        //if (info.getAttribute("class") != "HideClass") 
        //{
        //    $('[hide=' + $SaveIdForHideTooltip + ']').parent().parent().hide();
        //};
        //});

        $("#table").bind('DOMNodeInserted DOMNodeRemoved', function()
        {
            var tr = $('#table  tr.ui-widget-content.jqgrow.ui-row-ltr:last ');
            if (tr.length > 0)
            {
                var sel = '#table  tr.ui-widget-content.jqgrow.ui-row-ltr[id="' + tr[0].id + '"] > td';
                var tds = $(sel);
                //console.log(tds[0].title);
                //console.log(tr[0].id);
                FunctionalFortable(tr, tds[0]);
            }
        });

        function HideRows()
        {
            $('table[id="table"] > tbody > tr').hide();
        }

        //создание таблицы
        tableToGrid("#table", {
            url: '@Url.Action("SearchAdvertisingDesign", "Data")',
            datatype: "json",
            rowList: [10, 20, 30],
            //loadonce: true,
            gridview: true,
            autoencode: true,
            pager: '#jpager',
            jsonReader: {
                root: "Data",
                page: "page",
                total: "Total",
                records: "Records",
                repeatitems: true,
                //cell: "cell",
                id: "id"
                //userdata: "userdata",
                //subgrid: {root:"rows", 
                //    repeatitems: true, 
                //    cell:"cell"
                //}
            },
            //rowNum : 10000,
            height: "100%",
            colNames: [
                "Собственник",
                "Вид конструкции",
                "Населенный пункт",
                "Улица",
                "Дом/Номер_опоры",
                "Количество сторон",
                "Количестов поверхностей",
                "Площадь конструкции",
                "Разреш по"
            ],
            forceFit: false,

            cmTemplate: { "resizable": false, sortable: false },
            colModel: [
                { name: "Собственник", align: "center" },
                { name: "Вид_конструкции", align: "center" },
                { name: "Населенный_пункт", align: "center" },
                { name: "Улица", align: "center" },
                { name: "Дом_Номер_опоры", align: "center" },
                { name: "Количество_сторон", align: "center" },
                { name: "Количестов_поверхностей", align: "center" },
                { name: "Площадь_конструкции", align: "center" },
                { name: "Разреш_по", align: "center" }
            ],
            onSearch: function()
            {
                $(this).setGridParam({ datatype: 'json' });
                return true;
            },
            onReset: function()
            {
                $(this).setGridParam({ datatype: 'json' });
                return true;
            }
            //onPaging:function(){

            //    /*this code  is to fix the issue when we click on next page with some data in filter tool bar
            //     * along with this in grid definition( in filterToolbar ) we have to return true in "beforeClear "event 
            //     * */
            //    var data = $(this).jqGrid("getGridParam", "postData");
            //    data._search = false;
            //    data.filters=null;
            //    data.page=$(this).jqGrid("getGridParam","page");
            //    $(this)[0].clearToolbar();
            //    //Here making _search alone false will not solve problem, we have to make search also false. like in below.
            //    $(this).jqGrid('setGridParam', { search: false, postData:data });
            //    var data = $(this).jqGrid("getGridParam", "postData");


            //    /*this is to fix the issue when we go to last page(say there are only 3 records and page size is 5) and click 
            //     * on sorting the grid fetches previously loaded data (may be from its buffer) and displays 5 records  
            //     * where in i am expecting only 3 records to be sorted out.along with this in source code comment the line $t.p.records = 0;$t.p.page=1;$t.p.lastpage=0;
            //     */ 

            //    $(this).jqGrid("clearGridData");

            //    /* this is to make the grid to fetch data from server on page click*/

            //    $(this).setGridParam({datatype: 'json'}).triggerHandler("reloadGrid");
            //}
        });

        //HideRows();

        //Поиск
        $('#table').jqGrid('filterToolbar', { searchOnEnter: false, beforeClear: function() { return true; } });
        //$(".ui-jqgrid-bdiv").append("<h1 style=\"margin-left: 700px;margin-top: 300px\">Выберите параметры поиска</h1>");

        //подсветка
        $('table tr').on("click", function()
        {
            if (typeof $Tablebacklight != 'undefined')
            {
                $Tablebacklight.css("background-color", "");
            }
            $Tablebacklight = $(this);
            $Tablebacklight.css("background", "#ADDEFF");
        });
        //спрятать убрать всплывающие окна
        $("#AddNewAD").click(function()
        {
            if ($('#divForAddNewAD').css("visibility") == "hidden")
            {
                $('#divForAddNewAD').css("visibility", "visible");
            } else
            {
                $('#divForAddNewAD').css("visibility", "hidden");
            }
        });
        $("#EditStatusAD").click(function()
        {
            if ($('#divEditStatusAD').css("visibility") == "hidden")
            {
                $('#divEditStatusAD').css("visibility", "visible");
            } else
            {
                $('#divEditStatusAD').css("visibility", "hidden");
            }
        });
        //переход через ajax на edit billbord
        $('#EditBillbord').click(function()
        {
            if ($Tablebacklight != "undefined")
            {
                var IdGuid = $Tablebacklight.children("td:last").children().text();
                $.get('@Url.Action("EditAdvertisingDesign", "Data")', { id: IdGuid }).success(function(result)
                {
                    $("#Page").html(result);
                }).error(function()
                {
                    alert("что то пошло не так");
                });
            }
        });

        //собираем данные из поиска
        function PullData()
        {
            var collectionMap = [];
            $(".ui-state-default .ui-th-ltr input").each(function(indx, element)
            {
                collectionMap.push({ id: $(element).attr("id"), value: $(element).val().toString() });
            });

            var test = JSON.stringify(collectionMap);

            $.ajax({
                url: '@Url.Action("SaveSearch", "BackEndServices")',
                data: { collectionMap: test },
                type: 'POST',
                success: function(e)
                {
                    //alert(e);
                }
            });
        }

        //подсказка ,подсветка
        function FunctionalFortable(tr, td1)
        {
            $(".ui-jqgrid-bdiv>h1").remove();
            //var sgrid = $("#table")[0];
            //sgrid.triggerToolbar();

            $('.ui-widget-content.jqgrow.ui-row-ltr').on("click", function()
            {
                if (typeof $Tablebacklight != 'undefined')
                {
                    $Tablebacklight.css("background-color", "");
                }
                $Tablebacklight = $(this);
                $Tablebacklight.css("background", "#ADDEFF");
            });

            //console.log(tr[0].id);
            //выпадающее меню для всех типов строк
            tr.each(function(indx, element)
                {
                    //поиск ячейки в строке для считывания вида конструкции
                    var td = $(this).find('[aria-describedby="table_Вид_конструкции"]');
                    //выпадающее меню для указателей
                    if (td[0].title == "Металлический указатель")
                    {
                        $(element).tooltipsy({
                            alignTo: 'cursor',
                            offset: [0, -85],
                            hideEvent: 'focusout',
                            content: '<button class="HideClass" hide=' + indx + ' style="padding: 5px;text-align: left;font-size: 11px;font-weight: bold">' +
                                '+<a href="/Map/Index/' + $(element)[0].id + '">Показать на карте</a></br>' +
                                '+<a href="/Data/Pointer/' + $(element)[0].id + '">Показать данные о конструкции</a></br>' +
                                '+<a href="/Data/EditMetalPointerDesign/' + $(element)[0].id + '">Изменить данные о конструкции</a></br>' +
                                '+<a  href="/Data/DeleteAdvertisingDesign/'+ $(element)[0].id +'">Удалить конструкцию</a></br>' +
                                '</button>',
                            show: function(e, $el)
                            {
                                $el.show(100);
                            },
                            hide: function(e, $el)
                            {
                            },
                            delay: 200,
                            className: 'tooltipsy',
                            css: {}
                        });
                    }
                    //выпадающее меню для щитов
                    if (td[0].title == "Щит")
                    {
                        //console.log(tr[indx].id-1);

                        $(element).tooltipsy({
                            alignTo: 'cursor',
                            offset: [0, -85],
                            hideEvent: 'focusout',
                            content: '<button class="HideClass" hide=' + indx + ' style="padding: 5px;text-align: left;font-size: 11px;font-weight: bold">' +
                                '+<a href="/Map/Index/' + $(element)[0].id + '">Показать на карте</a></br>' +
                                '+<a href="/Data/Documents/' + $(element)[0].id + '">Показать данные о конструкции</a></br>' +
                                '+<a href="/Data/EditAdvertisingDesign/' + $(element)[0].id + '">Изменить данные о конструкции</a></br>' +
                                '+<a href="/Data/DeleteAdvertisingDesign/'+ $(element)[0].id +'">Удалить конструкцию</a></br>' +
                                '</button>',
                            show: function(e, $el)
                            {
                                $el.show(100);
                            },
                            hide: function(e, $el)
                            {
                            },
                            delay: 200,
                            className: 'tooltipsy',
                            css: {}
                        });
                    }
                    //выпадающее меню для световых коробов
                    if (td[0].title == "Световой короб")
                    {
                        $(element).tooltipsy({
                            alignTo: 'cursor',
                            offset: [0, -85],
                            hideEvent: 'focusout',
                            content: '<button class="HideClass" hide=' + indx + ' style="padding: 5px;text-align: left;font-size: 11px;font-weight: bold">' +
                                '+<a href="/Map/Index/' + $(element)[0].id + '">Показать на карте</a></br>' +
                                '+<a href="/Data/LightDuct/' + $(element)[0].id + '">Показать данные о конструкции</a></br>' +
                                '+<a href="/Data/EditLightDuctDesign/' + $(element)[0].id + '">Изменить данные о конструкции</a></br>' +
                                '+<a  href="/Data/DeleteAdvertisingDesign/'+ $(element)[0].id +'">Удалить конструкцию</a></br>' +
                                '</button>',
                            show: function(e, $el)
                            {
                                $el.show(100);
                            },
                            hide: function(e, $el)
                            {
                            },
                            delay: 200,
                            className: 'tooltipsy',
                            css: {}
                        });
                    }
                    //выпадающее меню для неопознанных конструкций
                    if (td[0].title == "Неопознанная конструкция")
                    {
                        $(element).tooltipsy({
                            alignTo: 'cursor',
                            offset: [0, -85],
                            hideEvent: 'focusout',
                            content: '<button class="HideClass" hide=' + indx + ' style="padding: 5px;text-align: left;font-size: 11px;font-weight: bold">' +
                                '+<a href="/Map/Index/' + $(element)[0].id + '">Показать на карте</a></br>' +
                                '+<a href="/Data/Illegal/' + $(element)[0].id + '">Показать данные о конструкции</a></br>' +
                                '+<a href="/Data/EditIllegalDesign/' + $(element)[0].id + '">Изменить данные о конструкции</a></br>' +
                                '+<a  href="/Data/DeleteAdvertisingDesign/'+ $(element)[0].id +'">Удалить конструкцию</a></br>' +
                                '</button>',
                            show: function(e, $el)
                            {
                                $el.show(100);
                            },
                            hide: function(e, $el)
                            {
                            },
                            delay: 200,
                            className: 'tooltipsy',
                            css: {}
                        });
                    }
                }
            );
        }


        function SetDate()
        {
            var collectionMap;
            if ('@(Html.Raw(Session["collectionMap"]))' != '[]' && '@(Html.Raw(Session["collectionMap"]))' != '')
            {
                collectionMap = JSON.parse('@(Html.Raw(Session["collectionMap"]))');
            }

            if (collectionMap != "[]" && collectionMap != '' && collectionMap != undefined)
            {
                $(".ui-state-default .ui-th-ltr input").each(function(indx, element)
                {
                    if (collectionMap != undefined)
                    {
                        $(element).val(collectionMap[indx].value);
                    }
                });
                FunctionalFortable();
            }
        }

        $("#search").click(function()
        {
            //$('table[id="table"] > tbody > tr:gt(8)').hide();
            PullData();
            FunctionalFortable();
        });
        window.onload = SetDate();

        //Повторный вызов функции для навештивания событий по двойному клику на строки таблицы после очистки поля поиска
        $(".clearsearchclass").switchClass("clearsearchclass", "clrsrchcls");
        $(".clrsrchcls").click(function()
        {
            //ClearSearch();
            FunctionalFortable();
        });

        //Повторный вызов функции для навештивания событий по нажатию энтер в строке поиска
        $('.ui-widget-content.ui-corner-all').keypress(function(event)
        {
            if (event.keyCode == 13)
            {
                // alert('Entered');
                FunctionalFortable();
            }
        });
    });

    //$(document).dblclick(function (e) {
    //    //накручивание индекса к пути удалить
    //    $('[href="/Data/DeleteAdvertisingDesign"]').
    //        attr("href","/Data/DeleteAdvertisingDesign/"+(Showonthemap[($(e.target).closest("tr").attr("id")-1)])+"") ;

    //    if (document.activeElement.getAttribute("class") != "HideClass") {
    //        $SaveIdForHideTooltip = document.activeElement.getAttribute("id")-1;
    //    }
    //});

    //$(document).click(function () {
    //    var info = document.activeElement;

    //    if (info.getAttribute("class") != "HideClass") 
    //    {
    //        $('[hide=' + $SaveIdForHideTooltip + ']').parent().parent().hide();
    //    };
    //});
</script>
@*чтобы jqgtid разбивал на несколько строк*@
<style type="text/css" media="screen">
    th.ui-th-column div {
        white-space: normal !important;
        height: auto !important;
        padding: 2px;
    }
</style>
<div id="Page">

    <h2>Таблица конструкций</h2>
    <div class="zoom">
        @{
            if (role != "ReadOnly")
            {
                <p>
                    <!-- Trigger the modal with a button -->
                    <b><input type="button" value="+ Добавить новую конструкцию" id="AddConstruction" class="btn btn-default" data-toggle="modal" data-target="#myModal"></b>
                    <b> <input type="button" value="Поиск" id="search" class="btn btn-default"></b>
                </p>
            }
        }

        <table id="table" class="table-bordered" cellpadding="5" style="width: 100%">
            <tr>

                <th>Собственник</th>
                <th>Вид_конструкции</th>
                <th>Населенный_пункт</th>
                <th>Улица</th>
                <th>Дом/Номер_опоры</th>
                <th> Количество_сторон</th>
                <th> Количестов_поверхностей</th>
                <th>Площадь_конструкции</th>
                <th>Разреш_по</th>
            </tr>

        </table>
        <div id="jpager"></div>
    </div>
</div>
<!-- Modal -->
<div id="myModal" class="modal fade" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title" align="center">Выберите тип конструкции</h4>
            </div>
            <div class="modal-body" style="text-align: center;">
                @Html.ActionLink("Щит", "CreateAdvertisingDesign", new {type = "Billboard"}, new {@class = "btn btn-default", style = "width : 196px; margin-bottom: 8px;"})
                <br/>
                @Html.ActionLink("Металлический указатель", "CreateMetalPointerDesign", new {}, new {@class = "btn btn-default", style = "width : 196px; margin-bottom: 8px;"})
                <br/>
                @Html.ActionLink("Световой короб", "CreateLightDuctDesign", new {}, new {@class = "btn btn-default", style = "width : 196px; margin-bottom: 8px;" })
                <br/>
                @Html.ActionLink("Неопознанная конструкция", "CreateIllegalDesign", new {}, new {@class = "btn btn-default", style = "width : 196px"})
                <br/>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Закрыть</button>
            </div>
        </div>

    </div>
</div>
<hr />
<footer>
    <p>&copy; @DateTime.Now.Year – <a href="#">OnCloud</a> @*| @Html.ActionLink("Лицензионное соглашение", "License", "Home")*@
    </p>
</footer>

@{ Html.RenderPartial("~/Views/Shared/PatialView/Modals.cshtml");}


