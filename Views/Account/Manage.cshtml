@using Sciencecom.Models;
@using Microsoft.AspNet.Identity;
@using Microsoft.AspNet.Identity.EntityFramework
@using Microsoft.AspNet.Identity
@using Sciencecom.Models
@using Sciencecom.Models.Users
@using Sciencecom.Enums
@{
    ViewBag.Title = "Управление учетными записями";
    Entities usersContext = new Entities();
    var um = new UserManager<ApplicationUser>(new UserStore<ApplicationUser>(new ApplicationDbContext()));
    ApplicationUser user = um.FindByName(User.Identity.GetUserName());
    string role = user.Roles.Select(m => m.Role.Name).First().ToString();
}

<h2>@ViewBag.Title</h2>

<p class="text-success">@ViewBag.StatusMessage</p>


@if ((role != "ReadOnly") && (role != "SupplierEditAll") && (role != "SupplierEditOwn") && (role != "IllegalEdit"))
{
    @Html.ActionLink("Компании", "Index", "Owners")<br />
    if (role != "OnlyLightBoxes")
    {
        @Html.ActionLink("+ Добавить пользователя", "Register")<br />


        <div class="row">
            <div class="col-md-12">
                <table class="table-striped" cellpadding="5">
                    <tr>
                        <th>
                            Имя
                        </th>
                        <th>
                            Компания
                        </th>
                        <th>
                            Права
                        </th>
                        <th>
                            Права доступны до
                        </th>

                        <th>
                            Назначить права
                        </th>
                        <th>
                            До
                        </th>
                        <th>
                            Действие
                        </th>
                    </tr>
                    @{
        foreach (var item in usersContext.AspNetUsers)
        {
            ApplicationUser userFromDataBase = um.FindByName(item.UserName);
            string roleOfUserFromDataBase = userFromDataBase.Roles.Select(m => m.Role.Name).First().ToString();

            if ((role == "ChiefEditAll") && ((roleOfUserFromDataBase == "Admin") || (roleOfUserFromDataBase == "ChiefEditAll")
                || (roleOfUserFromDataBase == "ChiefEditOwn") || (item.Company != user.Company))) { continue; }

            if ((role == "ChiefEditOwn") && ((roleOfUserFromDataBase == "Admin") || (roleOfUserFromDataBase == "ChiefEditAll")
               || (roleOfUserFromDataBase == "ChiefEditOwn") || (roleOfUserFromDataBase == "SupplierEditAll")
               || (item.Company != user.Company))) { continue; }
            using (Html.BeginForm("ChangeUser", "Account", FormMethod.Post, null))
            {
                @Html.HiddenFor(model => item.UserName)
                        <tr>
                            <td>
                                <input type="text" value=@item.UserName name="userName" readonly="readonly" />
                            </td>
                            <td>
                                @item.Company
                            </td>
                            <td>
                                @{
                switch (roleOfUserFromDataBase)
                {
                    case "Admin": @Html.Label("Администратор"); break;
                    case "ChiefEditAll": @Html.Label("Начальник S"); break;
                    case "ChiefEditOwn": @Html.Label("Начальник"); break;
                    case "SupplierEditAll": @Html.Label("Сотрудник S"); break;
                    case "SupplierEditOwn": @Html.Label("Сотрудник"); break;
                    case "ReadOnly": @Html.Label("Только чтение"); break;
                    case "IllegalEdit": @Html.Label("Неопознанные к-ции"); break;
                    case "OnlyLightBoxes": @Html.Label("Только короба"); break;
                    default: break;
                }
                                }
                            </td>
                            <td>
                                @{
                string date = usersContext.DatesOfRoles.Single(m => m.IdUser == item.Id).Date.ToString();
                date = date.Replace(" 0:00:00", "");
                if (date != "01.01.2100")
                {
                    @date
                }
                else
                {
                    date = "Не ограничено";
                    @date
                }
                                }
                            </td>
                            <td>
                                @if (user.UserName != item.UserName)
                                {
                                    if (role == "Admin")
                                    {
                                        @Html.DropDownList("newRole", new SelectList(new[]
                                      {"Только чтение (без срока)",
                                       "Неопознанные конструкции",
                                       "Только световые короба",
                                       "Сотрудник",
                                       "Сотрудник S",
                                       "Начальник",
                                       "Начальник S",
                                       "Администратор"}))
                                    }
                                    if (role == "ChiefEditAll")
                                    {
                                        @Html.DropDownList("newRole", new SelectList(new[]
                                      {"Только чтение (без срока)",
                                       "Сотрудник",
                                       "Сотрудник S"}))
                                    }
                                    if (role == "ChiefEditOwn")
                                    {
                                        @Html.DropDownList("newRole", new SelectList(new[]
                                      {"Только чтение (без срока)",
                                       "Сотрудник", }))
                                    }
                                }
                            </td>
                            <td>
                                @if (user.UserName != item.UserName)
                                {
                                    @Html.DropDownList("dateForNewRole", new SelectList(new[]
                              {
                                 "Не ограничено",
                                 "30 дней",
                                 "10 дней",
                                 "5 дней",
                                 "1 день",
                             }))
                                }
                            </td>
                            <td>
                                @if (user.UserName != item.UserName)
                                {
                                    <input type="submit" value="Сохранить" class="btn btn-info" />
                                    string deleteHref = "DeleteUser/" + item.UserName;
                                    <a href=@deleteHref class="btn btn-danger">Удалить</a>
                                }
                            </td>
                        </tr>
            }
        }
                    }
                </table>
            </div>
        </div>
    }
}
<div class="row">
    <div class="col-md-12">
        @if (ViewBag.HasLocalPassword)
        {
            @Html.Partial("_ChangePasswordPartial")
        }
        else
        {
            @Html.Partial("_SetPasswordPartial")
        }

        @*<section id="externalLogins">
                @Html.Action("RemoveAccountList")
                @Html.Partial("_ExternalLoginsListPartial", new { Action = "LinkLogin", ReturnUrl = ViewBag.ReturnUrl })
            </section>*@
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<footer>
    <p>&copy; @DateTime.Now.Year – <a href="http://scom.by" target="_blank">ООО "Сайнском"</a> @*| @Html.ActionLink("Лицензионное соглашение", "License", "Home")*@</p>
</footer>